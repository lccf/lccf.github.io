<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>向日葵园子</title>
  
  <subtitle>左手的向日葵园子</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2022-03-11T12:52:46.672Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lccf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小米路由器3配置外网开机和远程桌面</title>
    <link href="http://yoursite.com/2019/10/frp-remote-desktop-view.html"/>
    <id>http://yoursite.com/2019/10/frp-remote-desktop-view.html</id>
    <published>2019-10-12T02:00:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直用TeamViewer作为远程软件，有一段时间帐号被识别为企业帐号连上之后频繁断开，花了点时间在小米路由器3和VPS上配置FRP，实现远程开机和远程桌面。</p><h3 id="设备配置"><a href="#设备配置" class="headerlink" title="设备配置"></a>设备配置</h3><p>1.可公网访问的VPS一台<br>2.小米路由器3一个<br>3.可远程唤醒的主机一台</p><h3 id="原理说明"><a href="#原理说明" class="headerlink" title="原理说明"></a>原理说明</h3><p>1.远程开机<br>大部分Intel的网卡支持网络唤醒，通过特定端口发送UDP数据包广播，即可唤醒指定MAC地址的电脑（需要修改主板和网卡配置）。</p><p>2.FRP<br>FRP <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a> 是一款内网穿透软件，可将本地指定端口代理到远程服务器上，供外网连接。</p><p>3.部署方式<br>在远程服务器上部署frp server，在小米路由器3上部署frp client。在要发起远程的机器上安装frp client。</p><h3 id="服务器部署"><a href="#服务器部署" class="headerlink" title="服务器部署"></a>服务器部署</h3><p>1.下载frp <a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a> 我服务器是CentOS 7,下载linux_amd64的包(32位系统为linux_386)。</p><p>2.解压并拷贝文件到指定目录，路径关系如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">frps -&gt; /usr/local/bin/frps</span><br><span class="line">frps.ini -&gt; /etc/frp/frps.ini</span><br><span class="line">systemd/frps.service -&gt; /lib/systemd/system/frps.service</span><br></pre></td></tr></table></figure><p>3.修改配置<br>3.1修改 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;frps.service 文件，将 frps 的路径修改为 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;frps。<br>修改后的配置文件如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Frp Server Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=nobody</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">ExecStart=/usr/local/bin/frps -c /etc/frp/frps.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>3.2修改 &#x2F;etc&#x2F;frp&#x2F;frps.ini 文件，配置端口和token，可参考 <a href="https://github.com/fatedier/frp/blob/master/README_zh.md">https://github.com/fatedier/frp/blob/master/README_zh.md</a>。我配置了 bind_port、bind_udp_port、tcp_mux、token几个字段。<br>修改配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 2345</span><br><span class="line">bind_udp_port = 2346</span><br><span class="line">tcp_mux = true</span><br><span class="line">token = abcd123</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>2345、2346为服务所使用的端口，可以任意配置，请保证防火墙对以上两个端口保持开放。</li><li>token为客户端连接令牌，需和服务端保持一致。</li></ul><p>4.启动服务<br>执行命令 <code>sudo systemctl start frps.service</code>启动服务<br>可通过 <code>sudo systemctl start frpc.service</code> 查看服务状态</p><h3 id="小米路由器部署"><a href="#小米路由器部署" class="headerlink" title="小米路由器部署"></a>小米路由器部署</h3><p>1.小米路由器3先获取ssh root权限，具体操作网上搜。</p><p>2.在自己电脑上下载frpc linux mips客户端（路由器配置太低，操作耗时）。</p><p>3.解压文件，通过本地编辑器修改frpc.ini，分别配置ssh服务，远程唤醒服务，远程开机服务。<br>配置示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = &lt;服务端ip或域名&gt;</span><br><span class="line">server_port = 2345</span><br><span class="line">tcp_mux = true</span><br><span class="line">token = abcd123</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = stcp</span><br><span class="line">sk = aaa123</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line"></span><br><span class="line">[wol]</span><br><span class="line">type = udp</span><br><span class="line">local_ip = 192.168.31.255</span><br><span class="line">local_port = 9</span><br><span class="line">remote_port = 2347</span><br><span class="line"></span><br><span class="line">[rdesk]</span><br><span class="line">type = stcp</span><br><span class="line">sk = aaa123</span><br><span class="line">local_ip = &lt;要远程的机器本地ip地址&gt;</span><br><span class="line">local_port = 3389</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>common 配置服务连接模块</li><li>ssh 将路由器的ssh暴露出来，方便远程操作路由器，sk为约定的密钥，连接的机器需要配置sk来保证配对。</li><li>wol 将广播地址的UDP 9端口映射到VPS的2347端口。通过向VPS的2347端口发送UDP请求，唤醒局域网机器(VPS上2347端口要可访问)。local_ip为局域网广播地址，小米路由器默认为 192.168.31网段，如果有修改需要改到对应的地址。</li><li>rdesk 将本地电脑的 3389 端口映射成服务。</li></ul><p>4.创建服务文件frpc.d</p><p>内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh /etc/rc.common</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># frps:    FRP-Server Daemon</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># description:  FRP-Server Daemon</span></span><br><span class="line"></span><br><span class="line">START=99</span><br><span class="line">EXTRA_COMMANDS=<span class="string">&quot;status&quot;</span></span><br><span class="line">EXTRA_HELP=<span class="string">&quot;        status  Check frp client service status&quot;</span></span><br><span class="line"></span><br><span class="line">PID_FILE=/userdisk/frp/frpc.pid</span><br><span class="line">CONFIG_FILE=/userdisk/frp/frpc.ini</span><br><span class="line">FRP_SERVER=/userdisk/frp/frpc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ ! -f <span class="variable">$PID_FILE</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -n $<span class="string">&quot;Starting FRP server...&quot;</span></span><br><span class="line">        <span class="built_in">nohup</span> <span class="variable">$FRP_SERVER</span> -c <span class="variable">$CONFIG_FILE</span> &lt; /dev/null &gt; /dev/null 2&gt; /dev/null &amp;</span><br><span class="line">        <span class="built_in">echo</span> $! &gt; <span class="variable">$PID_FILE</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        PID=$(<span class="built_in">cat</span> <span class="variable">$PID_FILE</span>)</span><br><span class="line">        <span class="keyword">if</span> [ ! -f /proc/<span class="variable">$PID</span>/cmdline ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">echo</span> -n $<span class="string">&quot;Starting FRP server...&quot;</span></span><br><span class="line">            <span class="built_in">nohup</span> <span class="variable">$FRP_SERVER</span> -c <span class="variable">$CONFIG_FILE</span> &lt; /dev/null &gt; /dev/null 2&gt; /dev/null &amp;</span><br><span class="line">            <span class="built_in">echo</span> $! &gt; <span class="variable">$PID_FILE</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;FRP server is already running...&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">stop</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [[ -f <span class="variable">$PID_FILE</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -n $<span class="string">&quot;Shutting down FRP server...&quot;</span></span><br><span class="line">        <span class="built_in">kill</span> -9 $(<span class="built_in">cat</span> <span class="variable">$PID_FILE</span>)</span><br><span class="line">        <span class="built_in">rm</span> -f <span class="variable">$PID_FILE</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;FRP server is not running...&quot;</span></span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">status</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="variable">$PID_FILE</span> ]; <span class="keyword">then</span></span><br><span class="line">        PID=$(<span class="built_in">cat</span> <span class="variable">$PID_FILE</span>)</span><br><span class="line">        <span class="keyword">if</span> [ -f /proc/<span class="variable">$PID</span>/cmdline ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;FRP server is running...&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;FRP server is not running...&quot;</span></span><br><span class="line">            <span class="built_in">rm</span> -f <span class="variable">$PID_FILE</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;FRP server is not running...&quot;</span></span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.将文件同步到小米路由器 &#x2F;userdisk&#x2F;frp 目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">frpc -&gt; /userdisk/frp/frpc</span><br><span class="line">frpc.ini -&gt; /userdisk/frp/frpc.ini</span><br><span class="line">frpc.d -&gt; /userdisk/frp/frpc.d</span><br></pre></td></tr></table></figure><p><em>下面的操作在路由器上进行</em><br>6.将 &#x2F;userdisk&#x2F;frp&#x2F;frpc.d 通过软链接创建到 &#x2F;etc&#x2F;init.d&#x2F;frpc.d。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /userdisk/frp/frpc.d /etc/init.d/frpc</span><br></pre></td></tr></table></figure><p>7.启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 开启服务</span><br><span class="line">/etc/init.d/frpc start</span><br><span class="line"># 开机启动</span><br><span class="line">/etc/init.d/frpc enable</span><br></pre></td></tr></table></figure><p>通过 &#x2F;etc&#x2F;init.d&#x2F;frpc status 查看状态。</p><h3 id="访客端配置FRP"><a href="#访客端配置FRP" class="headerlink" title="访客端配置FRP"></a>访客端配置FRP</h3><p>为了安全起见，ssh和rdesk配置的是stcp模式，需要本地机器上配置客户端。将服务映射成本地端口，然后使用。</p><p>1.安装FRP<br>mac电脑直接 brew install frpc</p><p>2.修改配置文件<br>mac电脑配置文件在 &#x2F;usr&#x2F;local&#x2F;etc&#x2F;frp&#x2F;frpc.ini<br>示例配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = &lt;服务端ip或域名&gt;</span><br><span class="line">server_port = 2345</span><br><span class="line">tcp_mux = true</span><br><span class="line">token = abcd123</span><br><span class="line">admin_addr = 127.0.0.1</span><br><span class="line">admin_port = 7400</span><br><span class="line">admin_user = admin</span><br><span class="line">admin_pwd = admin123</span><br><span class="line"></span><br><span class="line">[ssh_visitor]</span><br><span class="line">type = stcp</span><br><span class="line">role = visitor</span><br><span class="line">server_name = ssh</span><br><span class="line">sk = aaa123</span><br><span class="line">bind_addr = 127.0.0.1</span><br><span class="line">bind_port = 1122</span><br><span class="line"></span><br><span class="line">[rdesk_visitor]</span><br><span class="line">type = stcp</span><br><span class="line">role = visitor</span><br><span class="line">server_name = rdesk</span><br><span class="line">sk = aaa123</span><br><span class="line">bind_addr = 127.0.0.1</span><br><span class="line">bind_port = 3389</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>common字段配置了admin相关配置，可以通过web界面查看服务状态</li><li>ssh_visitor将路由器上的ssh服务配置到本地的1122端口，使用ssh 127.0.0.1 -p 1122来访问</li><li>rdesk_visitor将路由器上的rdesk服务配置到本地的1122端口，使用远程桌面工具连接127.0.0.1:3389访问</li></ul><p>3.启动服务 <code>brew service start frpc</code>使用远程桌面尝试连接</p><h3 id="配置远程唤醒"><a href="#配置远程唤醒" class="headerlink" title="配置远程唤醒"></a>配置远程唤醒</h3><p>远程唤醒需要机器的网卡支持，如果不支持则无法使用远程唤醒功能，只能在机器开启的情况下使用远程桌面。</p><p>1.主板开启远程唤醒<br>在主板选项中的到 Wake On Lan 或者 WOL 选项并开启，各个电脑主板配置不同，可能需要修改多处。</p><p>2.在电脑网卡属性里面开启 魔包唤醒（Magic Packet）相关设置</p><p><img src="/img/201910/2019-10-12_01.png"></p><p>3.测试关机唤醒<br>在电脑关机的情况下，手机下载一个 Wake On Lan的app，手机和要唤醒的电脑处在同一局域网。配置Mac地址和广播地址，然后尝试是否能唤醒电脑。如果本地局域网能唤醒，则说明配置成功。</p><p><img src="/img/201910/2019-10-12_02.png"></p><p>4.远程唤醒<br>将ip地址改为VPS的ip地址，端口改为 2347，测试远程唤醒，正常情况下机器应该被唤醒。</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ul><li>frp <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></li><li>小米路由器ssh <a href="https://www.cnblogs.com/chenpingzhao/p/10935803.html">https://www.cnblogs.com/chenpingzhao/p/10935803.html</a></li><li>设置网络唤醒电脑 <a href="https://blog.csdn.net/xinluke/article/details/51169393">https://blog.csdn.net/xinluke/article/details/51169393</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前一直用TeamViewer作为远程软件，有一段时间帐号被识别为企业帐号连上之后频繁断开，花了点时间在小米路由器3和VPS上配置FRP，实现远程开机和远程桌面。&lt;/p&gt;
&lt;h3 id=&quot;设备配置&quot;&gt;&lt;a href=&quot;#设备配置&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
    <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
    <category term="server" scheme="http://yoursite.com/tags/server/"/>
    
    <category term="mi router" scheme="http://yoursite.com/tags/mi-router/"/>
    
  </entry>
  
  <entry>
    <title>linux主机安全设置</title>
    <link href="http://yoursite.com/2019/06/linux-host-security.html"/>
    <id>http://yoursite.com/2019/06/linux-host-security.html</id>
    <published>2019-06-26T15:08:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>一直在vps安全方面关注较少，某天服务器异常才注意到安全问题，看日志发现网上恶意攻击的行为很多，学习了一些简单的安全防护方法，整理一下。</p><h3 id="ssh相关"><a href="#ssh相关" class="headerlink" title="ssh相关"></a>ssh相关</h3><p>1.修改默认端口<br>修改ssh默认端口是操作最简单，性价比最高的一条，可以阻挡大量的恶意攻击。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/ssh/sshd_config </span><br><span class="line">#Port [端口]</span><br><span class="line">Port 1234</span><br></pre></td></tr></table></figure><p><em>修改Port前请确认防火墙相应端口已打开，如果修改失败可以先关闭selinux再试</em></p><p>2.使用证书登录，禁用密码登录<br>生成ssh key，将pub key添加到$HOME&#x2F;.ssh&#x2F;authorized_keys中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 使用证书登录</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br><span class="line"># 禁用密码登录</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>3.禁用root帐户登录<br>添加新用户并使用visudo命令为新用户添加sudo权限，禁用root帐户登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure><h3 id="端口设置白名单"><a href="#端口设置白名单" class="headerlink" title="端口设置白名单"></a>端口设置白名单</h3><p>现在很多vps后台自带端口管理工具，我们在后台中将需要使用的端口开放即可。后台未提供管理工具的，可以使用iptables工具进行设置，为iptables为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许访问 127.0.0.1</span></span><br><span class="line">iptables -A INPUT -i lo -p all -j ACCEPT</span><br><span class="line"><span class="comment"># 允许ping</span></span><br><span class="line">iptables -A INPUT -p icmp -j ACCEPT</span><br><span class="line"><span class="comment"># 允许ssh，将端口修改为自己的ssh服务端口</span></span><br><span class="line">iptables -A INPUT -p tcp –dport 1234 -j ACCEPT</span><br><span class="line"><span class="comment"># 开启web端口</span></span><br><span class="line">iptables -A INPUT -p tcp –dport 80 -j ACCEPT</span><br><span class="line"><span class="comment"># 禁用配置之外的访问</span></span><br><span class="line">iptables -P INPUT DROP</span><br></pre></td></tr></table></figure><h3 id="查看登录记录"><a href="#查看登录记录" class="headerlink" title="查看登录记录"></a>查看登录记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure><p>查看登录日志，查看是否有异常登录行为。</p><h3 id="查看ssh日志"><a href="#查看ssh日志" class="headerlink" title="查看ssh日志"></a>查看ssh日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> /var/log/secure</span><br></pre></td></tr></table></figure><p>查看ssh服务日志，是否有异常登录及密码错误尝试。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一直在vps安全方面关注较少，某天服务器异常才注意到安全问题，看日志发现网上恶意攻击的行为很多，学习了一些简单的安全防护方法，整理一下。&lt;/p&gt;
&lt;h3 id=&quot;ssh相关&quot;&gt;&lt;a href=&quot;#ssh相关&quot; class=&quot;headerlink&quot; title=&quot;ssh相关&quot;</summary>
      
    
    
    
    <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
    <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
    <category term="server" scheme="http://yoursite.com/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>alpine编译php5.6</title>
    <link href="http://yoursite.com/2019/05/alpine-build-php56.html"/>
    <id>http://yoursite.com/2019/05/alpine-build-php56.html</id>
    <published>2019-05-01T10:30:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>一些老代码还跑在php5.6的版本上，homebrew已经不支持5.6了打算迁移到docker上。php5.6的版本需要安装redis、memcached、xdebug的扩展，nginx添加了nginx-http-concat的插件。网上没有找到合适的docker脚本自己花了点时间来编译，脚本已上github <a href="https://github.com/lccf/alpine-php56">https://github.com/lccf/alpine-php56</a></p><h3 id="编译说明"><a href="#编译说明" class="headerlink" title="编译说明"></a>编译说明</h3><p>软件版本</p><ul><li>alpine 3.8</li><li>php 5.6.40</li><li>nginx 1.15.12</li></ul><p>编译中有很多试错的过程，为节省时间，分成了几个版本，出错后不用从头开始编译。</p><ul><li>alpine 设置时区，做基础alpine镜像</li><li>php-base 编译后的php，没有添加扩展</li><li>php-ext 添加了pdo_mysql、bcmath、intl、gd、opcache、redis、xdebug、memcached等扩展</li><li>php-nginx 编译nginx，添中nginx扩展，设置启动脚本</li></ul><p>按照先后顺序，执行build.sh脚本进行编译。</p><p>php编译脚本是从docker-library&#x2F;php项目修改来的，最新版本已经移除5.6了，需要切换到fab49d4的commit。默认是在dockerfile下载php安装包的，国外网络环境速度比较慢，改为build脚本下载，也可以手动下载好，编译的时候节省时间。</p><p>php插件安装的脚本是docker-library&#x2F;php自带的，使用起来比较方便。但是安装php扩展装的依赖库体积增加了50MB，目前还没有好的解决办法。</p><p>nginx脚本是从nginxinc&#x2F;docker-nginx项目修改来，添加了nginx-http-concat插件。nginx-http-concat项目上release版本有问题，需要下载master分支的源码。</p><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><p>默认项目目录 &#x2F;var&#x2F;www 启用时默认开启nginx和php。</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -d --name php5 \</span><br><span class="line">    -p 80:80 \</span><br><span class="line">    -v /workdir/conf:/etc/nginx/conf.d \</span><br><span class="line">    -v /workdir/www:/var/www \</span><br><span class="line">    dev/php-nginx:1.15</span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ul><li>docker-library&#x2F;docker-php <a href="https://github.com/docker-library/php/commit/fab49d4cb1c61e4f74c2dffe06961408212f054c">https://github.com/docker-library/php/commit/fab49d4cb1c61e4f74c2dffe06961408212f054c</a></li><li>nginxinc&#x2F;docker-nginx <a href="https://github.com/nginxinc/docker-nginx">https://github.com/nginxinc/docker-nginx</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一些老代码还跑在php5.6的版本上，homebrew已经不支持5.6了打算迁移到docker上。php5.6的版本需要安装redis、memcached、xdebug的扩展，nginx添加了nginx-http-concat的插件。网上没有找到合适的docker脚本自己花</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
    <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
    <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
    <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
    <category term="alpine" scheme="http://yoursite.com/tags/alpine/"/>
    
  </entry>
  
  <entry>
    <title>webpack零配置搭建react开发环境</title>
    <link href="http://yoursite.com/2019/02/webpack-zero-config-react-env.html"/>
    <id>http://yoursite.com/2019/02/webpack-zero-config-react-env.html</id>
    <published>2019-02-26T11:36:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>webpack经过多轮的迭代，已经成为前端开发工具链上的霸主，配置也越来越复杂。网上看到了一款插件，可以零配置搭建一个react开发环境，方便单个模块调试。虽然离产品级应用还有距离，却可以节省很多时间和精力，推荐一下。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> react-app</span><br><span class="line"><span class="built_in">cd</span> react-app</span><br><span class="line"><span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> &gt; package.json</span><br><span class="line"><span class="comment"># 安装webpack及依赖</span></span><br><span class="line">npm i -D webpack webpack-dev-server webpack-cli html-webpack-plugin common-config-webpack-plugin</span><br><span class="line"><span class="comment"># 安装react</span></span><br><span class="line">npm i -S react react-dom</span><br></pre></td></tr></table></figure><h3 id="react编码"><a href="#react编码" class="headerlink" title="react编码"></a>react编码</h3><p>编辑src&#x2F;index.jsx</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># src/index.<span class="property">jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; <span class="title class_">Component</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">App</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; text &#125; = <span class="variable language_">this</span>.<span class="property">props</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;text&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">renderEl</span> = (<span class="params">elementId = <span class="string">&#x27;app&#x27;</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(elementId);</span><br><span class="line">  <span class="keyword">if</span> (!el) &#123;</span><br><span class="line">    el = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    el.<span class="title function_">setAttribute</span>(<span class="string">&#x27;id&#x27;</span>, elementId);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(el);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> <span class="attr">text</span>=<span class="string">&quot;React Demo&quot;</span> /&gt;</span></span>, el);</span><br><span class="line">  el = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">renderEl</span>();</span><br></pre></td></tr></table></figure><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx webpack-dev-server --plugin common-config-webpack-plugin --plugin html-webpack-plugin</span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:8080/">http://localhost:8080</a> 即可看到效果。</p><h3 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h3><p>编辑package.json，将启动命令配置到scripts中，即可使用npm start启动项目。完整package.json如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-dev-server --plugin common-config-webpack-plugin --plugin html-webpack-plugin&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;common-config-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.29.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;react&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.8.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;react-dom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.8.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>启动命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>webpack-config-plugins <a href="https://github.com/namics/webpack-config-plugins">https://github.com/namics/webpack-config-plugins</a><br>react <a href="https://reactjs.org/">https://reactjs.org/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;webpack经过多轮的迭代，已经成为前端开发工具链上的霸主，配置也越来越复杂。网上看到了一款插件，可以零配置搭建一个react开发环境，方便单个模块调试。虽然离产品级应用还有距离，却可以节省很多时间和精力，推荐一下。&lt;/p&gt;
&lt;h3 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
    <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>Yii框架buildCondition的使用</title>
    <link href="http://yoursite.com/2018/07/yii-build-condition-usage.html"/>
    <id>http://yoursite.com/2018/07/yii-build-condition-usage.html</id>
    <published>2018-07-31T10:32:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>业余项目中遇到一个bug，google好久终于在stackOverflow上面找到了解决方法，用到了Yii框架的buildCondition方法。网上资料不多，分享一下。</p><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>项目中有一张tags的表用来存给content打的标签，建表的时候默认没有设置mysql区分大小写。维护标签的时候无法区分大小写导致数据出错，网上搜索的结果是使用<code>BINARY</code>关键字，实际操作时发现卡住了。</p><p>具体情况如下：</p><ul><li>yii框架默认的<code>IN</code>语法无法直接添加<code>BINARY</code>关键字</li><li>使用参数绑定时无法正确识别数组</li></ul><p>示例代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原标签数组</span></span><br><span class="line"><span class="variable">$oldTagArray</span> = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;def&#x27;</span>];</span><br><span class="line"><span class="comment">// 默认in语法无法添加BINARY关键字</span></span><br><span class="line"><span class="comment">//$tags = Tag::find()</span></span><br><span class="line"><span class="comment">//    -&gt;where([&#x27;IN&#x27;, &#x27;title&#x27;, $oldTagArray])</span></span><br><span class="line"><span class="comment">//    -&gt;all()</span></span><br><span class="line"><span class="comment">// 使用参数绑定时无法正确识别数组</span></span><br><span class="line"><span class="variable">$tags</span> = <span class="title class_">Tag</span>::<span class="title function_ invoke__">find</span>()</span><br><span class="line">    -&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;BINARY title IN (:tags)&#x27;</span>, [<span class="string">&#x27;tags&#x27;</span> =&gt; <span class="variable">$oldTagArray</span>])</span><br><span class="line">    -&gt;<span class="title function_ invoke__">all</span>()</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>最直接的方法是手动来拼接此处的sql，但是要手动处理字符串转义和sql防注入，比较繁琐。在google上搜索到一段buildCondition的用法。</p><p>最终代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原标签数组</span></span><br><span class="line"><span class="variable">$oldTagArray</span> = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;def&#x27;</span>];</span><br><span class="line"><span class="variable">$oldTagParam</span> = [];</span><br><span class="line"><span class="variable">$whereSql</span> = <span class="title class_">Yii</span>::<span class="variable">$app</span>-&gt;db-&gt;<span class="title function_ invoke__">getQueryBuilder</span>()</span><br><span class="line">    -&gt;<span class="title function_ invoke__">buildCondition</span>([<span class="string">&#x27;IN&#x27;</span>, <span class="string">&#x27;title&#x27;</span>, <span class="variable">$oldTagArray</span>], <span class="variable">$oldTagParam</span>);</span><br><span class="line"><span class="variable">$tags</span> = <span class="title class_">Tag</span>::<span class="title function_ invoke__">find</span>()</span><br><span class="line">    -&gt;<span class="title function_ invoke__">where</span>(<span class="string">&quot;BINARY <span class="subst">$whereSql</span>&quot;</span>, <span class="variable">$oldTagParam</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">all</span>();</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>定义$oldTagParam用来存放参数</li><li>使用buildCondition来生成参数($oldTagParam的为引用类型，buildCondition方法直接修改值)</li><li>生成后的$whereSql类似title IN (:qp0, :qp1)</li><li>修改后的$oldTagParam类似[‘:qp0’&#x3D;&gt;’abc’, ‘:qp1’&#x3D;&gt;’def’]</li><li>参过where方法拼接BINARY关键字和sql，并传入绑定参数</li></ul><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>stackOverflow相关问题链接 <a href="https://stackoverflow.com/questions/30000412/correct-way-to-bind-parameters-using-mysql-in-syntax-in-yii2">https://stackoverflow.com/questions/30000412/correct-way-to-bind-parameters-using-mysql-in-syntax-in-yii2</a></p><p>buildCondition参考 <a href="https://www.yiiframework.com/doc/api/2.0/yii-db-querybuilder#buildCondition()-detail">https://www.yiiframework.com/doc/api/2.0/yii-db-querybuilder#buildCondition()-detail</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;业余项目中遇到一个bug，google好久终于在stackOverflow上面找到了解决方法，用到了Yii框架的buildCondition方法。网上资料不多，分享一下。&lt;/p&gt;
&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
    <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
    <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Mac平台配置fish shell</title>
    <link href="http://yoursite.com/2018/01/fish-shell-start.html"/>
    <id>http://yoursite.com/2018/01/fish-shell-start.html</id>
    <published>2018-01-12T15:34:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>从bash切换到fish有一段时间了，换fish之后terminal启动和新开tab速度明显加快。整理一下fish和一些常用shell工具的配置(2018-11-12更新fisher版本)。</p><ul><li>2018-11-12 fishermen作者删除了fisherman的项目组织，文档相应更新，并更新插件</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1.安装fish shell及常用组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">brew install git autojump fzf</span><br><span class="line"><span class="comment"># 安装fish</span></span><br><span class="line">brew install fish</span><br></pre></td></tr></table></figure><ul><li>git版本控制工具</li><li>autojump快速进入目录的工具，非常好用</li><li>fzf命令行下模糊筛查工具</li></ul><p>2.切的shell到fish</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /usr/local/bin/fish</span><br></pre></td></tr></table></figure><p>3.安装fisher</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://git.io/fisher --create-dirs -sLo ~/.config/fish/functions/fisher.fish</span><br></pre></td></tr></table></figure><ul><li>fisher提供fish包管理功能</li><li>安装完成后需要重启一下shell</li></ul><p>4.安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fisher add edc/bass jorgebucaran/fish-git-util oh-my-fish/theme-default \</span><br><span class="line">jethrokuan/fzf daenney/rbenv FabioAntunes/fish-nvm \</span><br><span class="line">danhper/fish-fastdir jhillyerd/plugin-git</span><br></pre></td></tr></table></figure><ul><li>edc&#x2F;bass 可以fish中执行bash</li><li>jorgebucaran&#x2F;fish-git-util 基础方法，供主题中展示git信息，是oh-my-fish&#x2F;theme-default的依赖</li><li>oh-my-fish&#x2F;theme-default 主题插件，提供友好的信息显示</li><li>jethrokuan&#x2F;fzf 但供fzf快捷键映射</li><li>daenney&#x2F;rbenv 提供rbenv命令支持（ruby开发者使用）</li><li>FabioAntunes&#x2F;fish-nvm 提供nvm支持（nodejs开发者使用）</li><li>danhper&#x2F;fish-fastdir 提供快捷的路径切换功能</li><li>jhillyerd&#x2F;plugin-git 提供git命令缩写</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>fish配置文件在 ~&#x2F;.config&#x2F;fish&#x2F;config.fish，如果没有则手动创建即可。</p><p>1.设置欢迎语<br>vim ~&#x2F;.config&#x2F;fish&#x2F;config.fish</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config welcome text</span></span><br><span class="line"><span class="built_in">set</span> fish_greeting <span class="string">&#x27;Talk is cheap. Show me the code.&#x27;</span></span><br></pre></td></tr></table></figure><p>2.配置vi_mode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># key binding</span></span><br><span class="line"><span class="comment"># vi mode</span></span><br><span class="line">fish_vi_key_bindings</span><br><span class="line"><span class="keyword">for</span> mode <span class="keyword">in</span> insert default visual</span><br><span class="line">    <span class="comment"># vi模式下ctrl-e到行尾</span></span><br><span class="line">    <span class="built_in">bind</span> -M <span class="variable">$mode</span> \ce end-of-line</span><br><span class="line">    <span class="comment"># vi模式下ctrl-a到行首</span></span><br><span class="line">    <span class="built_in">bind</span> -M <span class="variable">$mode</span> \ca beginning-of-line</span><br><span class="line">end</span><br><span class="line"><span class="comment"># cancel key bindings: fish_default_key_bindings</span></span><br></pre></td></tr></table></figure><p><del>3.配置fzf</del></p><ul><li>已废弃，jethrokuan&#x2F;fzf 插件已提供默认配置</li></ul><p>4.配置autojump</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># autojump</span></span><br><span class="line">[ -f /usr/local/share/autojump/autojump.fish ]; and <span class="built_in">source</span> /usr/local/share/autojump/autojump.fish</span><br></pre></td></tr></table></figure><p>5.配置nvm<br>vim ~&#x2F;.config&#x2F;fish&#x2F;config.fish</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -xg nvm_prefix <span class="string">&quot;/usr/local/opt/nvm&quot;</span></span><br><span class="line"><span class="built_in">set</span> -xg NVM_DIR <span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line"><span class="built_in">set</span> -xg NVM_PATH <span class="string">&quot;/usr/local/opt/nvm&quot;</span></span><br><span class="line"><span class="built_in">set</span> -xg NVM_NODEJS_ORG_MIRROR <span class="string">&quot;https://npm.taobao.org/dist&quot;</span></span><br></pre></td></tr></table></figure><p>6.配置rbenv<br>rbenv默认需要添加到path中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -U fish_user_paths <span class="variable">$HOME</span>/.rbenv/bin <span class="variable">$fish_user_paths</span></span><br></pre></td></tr></table></figure><p>7.配置命令缩略<br>fish shell可以通过abbr命令添加命名缩略。示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abbr -a g git</span><br></pre></td></tr></table></figure><ul><li>上面的命令将添加g为git的写，在命令行中敲g的时候，可以替代git。</li><li>abbr 区别于 alias*</li></ul><h3 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config welcome text</span></span><br><span class="line"><span class="built_in">set</span> fish_greeting <span class="string">&#x27;Talk is cheap. Show me the code.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nvm</span></span><br><span class="line"><span class="built_in">set</span> -xg NVM_DIR <span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line"><span class="built_in">set</span> -xg nvm_prefix /usr/local/opt/nvm</span><br><span class="line"><span class="built_in">set</span> -xg NVM_NODEJS_ORG_MIRROR <span class="string">&quot;https://npm.taobao.org/dist&quot;</span></span><br><span class="line"><span class="built_in">set</span> -xg NODE_PATH <span class="string">&quot;<span class="variable">$NVM_DIR</span>/versions/node/v8.9.2/lib/node_modules&quot;</span></span><br><span class="line"><span class="built_in">set</span> -xg HOMEBREW_BOTTLE_DOMAIN https://mirrors.ustc.edu.cn/homebrew-bottles</span><br><span class="line"><span class="comment"># rbenv</span></span><br><span class="line"><span class="built_in">set</span> -xg RBENV_ROOT <span class="variable">$HOME</span>/.rbenv</span><br><span class="line"><span class="comment"># fzf</span></span><br><span class="line"><span class="built_in">set</span> -U FZF_LEGACY_KEYBINDINGS 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># user path</span></span><br><span class="line"><span class="comment"># add user path</span></span><br><span class="line"><span class="comment"># set -U fish_user_paths [path] $fish_user_paths</span></span><br><span class="line"><span class="comment"># set user path</span></span><br><span class="line"><span class="comment"># set -U fish_user_paths /usr/local/opt/mysql@5.5/bin /usr/local/opt/coreutils/libexec/gnubin /usr/local/opt/fzf/bin $HOME/.rbenv/bin $HOME/.nvm/versions/node/v8.9.3/bin $HOME/.composer/vendor/bin /usr/local/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># alias</span></span><br><span class="line"><span class="built_in">alias</span> g=git</span><br><span class="line"><span class="built_in">alias</span> tnpm=<span class="string">&#x27;npm --registry=https://registry.npm.taobao.org --disturl=https://npm.taobao.org/dist&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> fpview=<span class="string">&#x27;fzf --preview &quot;head -n 100 &#123;&#125;&quot; | read -l result; and vim $result&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> fcd=<span class="string">&#x27;find . -type d -maxdepth 1 | fzf --height 50% --reverse --border | read -l result; and cd $result&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> fvim=<span class="string">&#x27;find . -type f -maxdepth 1 | fzf --reverse --preview &quot;head -n 100 &#123;&#125;&quot; | read -l result; and vim $result&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> fls=<span class="string">&#x27;ls | fzf --height 50% --reverse --border&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">rm</span>=trash</span><br><span class="line"></span><br><span class="line"><span class="comment"># abbr</span></span><br><span class="line"><span class="comment"># add abbr: abbr -a b brew</span></span><br><span class="line"><span class="comment"># abbr b brew</span></span><br><span class="line"><span class="comment"># abbr f fuck</span></span><br><span class="line"><span class="comment"># abbr g git</span></span><br><span class="line"><span class="comment"># abbr gst &#x27;g st&#x27;</span></span><br><span class="line"><span class="comment"># abbr gfa &#x27;g fa&#x27;</span></span><br><span class="line"><span class="comment"># abbr gss &#x27;g st -s&#x27;</span></span><br><span class="line"><span class="comment"># abbr gco &#x27;g co&#x27;</span></span><br><span class="line"><span class="comment"># abbr gbr &#x27;g br&#x27;</span></span><br><span class="line"><span class="comment"># abbr glg &#x27;g lg&#x27;</span></span><br><span class="line"><span class="comment"># abbr gla &#x27;g lga&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#function fish_user_key_bindings</span></span><br><span class="line"><span class="comment">#  bind \cr &#x27;peco_select_history (commandline -b)&#x27;</span></span><br><span class="line"><span class="comment">#end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># autojump</span></span><br><span class="line">[ -f /usr/local/share/autojump/autojump.fish ]; and <span class="built_in">source</span> /usr/local/share/autojump/autojump.fish</span><br><span class="line"></span><br><span class="line"><span class="comment"># key binding</span></span><br><span class="line"><span class="comment"># backup fish_user_key_bindings</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">functions</span> -q fish_user_key_bindings</span><br><span class="line">  <span class="built_in">functions</span> -c fish_user_key_bindings custom_fish_user_key_bindings_copy</span><br><span class="line">end</span><br><span class="line"><span class="keyword">function</span> fish_user_key_bindings</span><br><span class="line">  fish_vi_key_bindings</span><br><span class="line">  <span class="comment"># fzf_key_bindings</span></span><br><span class="line">  <span class="keyword">for</span> mode <span class="keyword">in</span> insert default visual</span><br><span class="line">    <span class="built_in">bind</span> -M <span class="variable">$mode</span> \ce end-of-line</span><br><span class="line">    <span class="built_in">bind</span> -M <span class="variable">$mode</span> \ca beginning-of-line</span><br><span class="line">  end</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">functions</span> -q custom_fish_user_key_bindings_copy</span><br><span class="line">    custom_fish_user_key_bindings_copy</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"><span class="comment"># cancel key bindings: fish_default_key_bindings</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> add_fish_path</span><br><span class="line">  <span class="built_in">set</span> -U fish_user_paths <span class="variable">$argv</span> <span class="variable">$fish_user_paths</span></span><br><span class="line">  <span class="built_in">echo</span> current: <span class="variable">$fish_user_paths</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> remove_fish_path</span><br><span class="line">  <span class="built_in">set</span> -U fish_user_paths (string match -v <span class="variable">$argv</span> <span class="variable">$fish_user_paths</span>)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>fish shell <a href="https://github.com/fish-shell/fish-shell">https://github.com/fish-shell/fish-shell</a><br>fisher <a href="https://github.com/jorgebucaran/fisher">https://github.com/jorgebucaran/fisher</a><br>autojump <a href="https://github.com/wting/autojump">https://github.com/wting/autojump</a><br>fzf <a href="https://github.com/junegunn/fzf">https://github.com/junegunn/fzf</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从bash切换到fish有一段时间了，换fish之后terminal启动和新开tab速度明显加快。整理一下fish和一些常用shell工具的配置(2018-11-12更新fisher版本)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018-11-12 fishermen作者删除了fis</summary>
      
    
    
    
    <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
    <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
    <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
    <category term="fish" scheme="http://yoursite.com/tags/fish/"/>
    
    <category term="fish shell" scheme="http://yoursite.com/tags/fish-shell/"/>
    
  </entry>
  
  <entry>
    <title>ts+cucumber+webdriverio实现E2E测试</title>
    <link href="http://yoursite.com/2017/170103.html"/>
    <id>http://yoursite.com/2017/170103.html</id>
    <published>2017-01-03T11:21:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>抽时间看了下cucumber的js版本，分享下自己写的示例。代码地址： <a href="https://github.com/lccf/codelibrary/tree/master/tscucumber">https://github.com/lccf/codelibrary/tree/master/tscucumber</a></p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><ul><li>2017&#x2F;01&#x2F;25 更新cucumber版本和ts提示库，使用defineSupportCode语法。</li></ul><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>1.创建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ts-cucumber</span><br><span class="line"><span class="built_in">cd</span> ts-cucumber</span><br><span class="line"><span class="built_in">mkdir</span> -p features/step_definitions features/support src/step_definitions src/support</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> &gt; package.json</span><br><span class="line">npm install typescript cucumber webdriverio cucumber-assert @types/cucumber @types/webdriverio --save-dev</span><br></pre></td></tr></table></figure><p>2.安装selenium-standalone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install selenium-standalone -g</span><br><span class="line"><span class="comment"># baseUrl参数设置淘宝mirror</span></span><br><span class="line">selenium-standalone install --baseURL=http://npm.taobao.org/mirrors/selenium</span><br></pre></td></tr></table></figure><p>3.创建ts配置文件，设定ts编译选项，源代码目录为src，目标代码目录为features<br>tsconfig.json</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;module&quot;</span>: <span class="string">&quot;commonjs&quot;</span>,</span><br><span class="line">        <span class="string">&quot;target&quot;</span>: <span class="string">&quot;es6&quot;</span>,</span><br><span class="line">        <span class="string">&quot;noImplicitAny&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;removeComments&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;lib&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;es6&quot;</span>,</span><br><span class="line">            <span class="string">&quot;dom&quot;</span>,</span><br><span class="line">            <span class="string">&quot;scripthost&quot;</span>,</span><br><span class="line">            <span class="string">&quot;es2015.generator&quot;</span>,</span><br><span class="line">            <span class="string">&quot;es2015.promise&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;sourceRoot&quot;</span>: <span class="string">&quot;src&quot;</span>,</span><br><span class="line">        <span class="string">&quot;outDir&quot;</span>: <span class="string">&quot;features&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.添加npm启动脚本，编译ts后启动cucumberjs<br>package.json</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;tsc -p . &amp;&amp; cucumberjs&quot;</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>1.添加测试需求描述文件<br>features&#x2F;bing_search.feature </p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Feature</span>: 必应搜索</span><br><span class="line">  <span class="keyword">Scenario</span>: 搜索cucumber</span><br><span class="line">    <span class="keyword">Given</span> 我访问 <span class="string">&quot;https://www.bing.com&quot;</span></span><br><span class="line">    <span class="keyword">When</span> 我输入 <span class="string">&quot;cucumber&quot;</span></span><br><span class="line">    <span class="keyword">And</span> 我点击 <span class="string">&quot;搜索&quot;</span></span><br><span class="line">    <span class="keyword">Then</span> 页面标题中应包含 <span class="string">&quot;cucumber&quot;</span></span><br></pre></td></tr></table></figure><p>2.添加cucumber-assert定义文件<br>src&#x2F;declare&#x2F;cucumber-assert.d.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">namespace</span> <span class="title class_">CucumberAssert</span> &#123;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">equal</span>: <span class="function">(<span class="params">actual: <span class="built_in">any</span>, expected: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">notEqual</span>: <span class="function">(<span class="params">actual: <span class="built_in">any</span>, expected: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">deepEqual</span>: <span class="function">(<span class="params">actual: <span class="built_in">any</span>, expected: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">notDeepEqual</span>: <span class="function">(<span class="params">actual: <span class="built_in">any</span>, expected: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">strictEqual</span>: <span class="function">(<span class="params">actual: <span class="built_in">any</span>, expected: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">notStrictEqual</span>: <span class="function">(<span class="params">actual: <span class="built_in">any</span>, expected: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">throws</span>: <span class="function">(<span class="params">block: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, error?: <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">doesNotThrow</span>: <span class="function">(<span class="params">block: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">let</span> <span class="attr">ifError</span>: <span class="function">(<span class="params">value: <span class="built_in">any</span>, callback: () =&gt; <span class="built_in">any</span>, message?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;cucumber-assert&quot;</span> &#123;</span><br><span class="line">    <span class="keyword">export</span> = <span class="title class_">CucumberAssert</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.添加world支持文件<br>src&#x2F;support&#x2F;world.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineSupportCode &#125; <span class="keyword">from</span> <span class="string">&#x27;cucumber&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CustomWorld</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineSupportCode</span>(<span class="keyword">function</span>(<span class="params">&#123; setWorldConstructor &#125;: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="title function_">setWorldConstructor</span>(<span class="title class_">CustomWorld</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.添加hook文件，初始化浏览器client<br>src&#x2F;support&#x2F;hook.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> webdriverio <span class="keyword">from</span> <span class="string">&#x27;webdriverio&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; defineSupportCode, <span class="title class_">CallbackStepDefinition</span>, <span class="title class_">Hooks</span>, <span class="title class_">HookScenario</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;cucumber&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">client</span>: <span class="title class_">WebdriverIO</span>.<span class="property">Client</span>&lt;<span class="built_in">void</span>&gt; = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> initClient = <span class="keyword">function</span>(<span class="params">callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">options</span>: <span class="title class_">WebdriverIO</span>.<span class="property">RemoteOptions</span> = &#123;</span><br><span class="line">    <span class="attr">desiredCapabilities</span>: &#123;</span><br><span class="line">      <span class="attr">browserName</span>: <span class="string">&#x27;chrome&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">logLevel</span>: <span class="string">&#x27;silent&#x27;</span>,</span><br><span class="line">    <span class="attr">baseUrl</span>: <span class="string">&#x27;http://localhost:3000&#x27;</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  client = webdriverio</span><br><span class="line">    .<span class="title function_">remote</span>(options)</span><br><span class="line">    .<span class="title function_">init</span>()</span><br><span class="line">    .<span class="title function_">setViewportSize</span>(&#123; <span class="attr">width</span>: <span class="number">800</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;, <span class="literal">true</span>)</span><br><span class="line">    .<span class="title function_">getViewportSize</span>().<span class="title function_">then</span>(<span class="function"><span class="params">size</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(size))</span><br><span class="line">    .<span class="title function_">call</span>(callback);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineSupportCode</span>(<span class="keyword">function</span>(<span class="params">&#123; Before, After, registerHandler&#125;: Hooks</span>) &#123;</span><br><span class="line">  <span class="title function_">registerHandler</span>(<span class="string">&#x27;BeforeFeatures&#x27;</span>, <span class="keyword">function</span>(<span class="params">features: <span class="built_in">any</span>[], callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    <span class="title function_">initClient</span>(callback);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Before</span>(<span class="keyword">function</span>(<span class="params">scenarioResult: HookScenario, callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">client</span> = client;</span><br><span class="line">    <span class="title function_">callback</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">registerHandler</span>(<span class="string">&#x27;AfterFeatures&#x27;</span>, <span class="keyword">function</span>(<span class="params">features: <span class="built_in">any</span>[], callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    client.<span class="title function_">end</span>().<span class="title function_">call</span>(callback);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>5.添加测试定义代码<br>src&#x2F;step_definitions&#x2F;bing_search_steps.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineSupportCode, <span class="title class_">CallbackStepDefinition</span>, <span class="title class_">StepDefinitions</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;cucumber&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> assert <span class="keyword">from</span> <span class="string">&#x27;cucumber-assert&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineSupportCode</span>(<span class="keyword">function</span>(<span class="params">&#123; Given, Then, When &#125;: StepDefinitions</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">client</span>: <span class="title class_">WebdriverIO</span>.<span class="property">Client</span>&lt;<span class="built_in">void</span>&gt;;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Given</span>(<span class="string">&#x27;我访问 &#123;arg1:stringInDoubleQuotes&#125;&#x27;</span>, <span class="keyword">function</span> (<span class="params">pageUrl: <span class="built_in">string</span>, callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    client = <span class="variable language_">this</span>.<span class="property">client</span>;</span><br><span class="line">    client.<span class="title function_">url</span>(pageUrl).<span class="title function_">call</span>(callback);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Then</span>(<span class="string">&#x27;我输入 &#123;arg1:stringInDoubleQuotes&#125;&#x27;</span>, <span class="keyword">function</span> (<span class="params">queryString: <span class="built_in">string</span>, callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    client = <span class="variable language_">this</span>.<span class="property">client</span>;</span><br><span class="line">    client.<span class="title function_">setValue</span>(<span class="string">&#x27;#sb_form_q&#x27;</span>, queryString).<span class="title function_">call</span>(callback);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Then</span>(<span class="string">&#x27;我点击搜索&#x27;</span>, <span class="keyword">function</span>(<span class="params">callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    client = <span class="variable language_">this</span>.<span class="property">client</span>;</span><br><span class="line">    client.<span class="title function_">click</span>(<span class="string">&#x27;#sb_form_go&#x27;</span>).<span class="title function_">call</span>(callback);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">When</span>(<span class="string">&#x27;页面标题中应包含 &#123;arg1:stringInDoubleQuotes&#125;&#x27;</span>, <span class="keyword">function</span> (<span class="params">title: <span class="built_in">string</span>, callback: CallbackStepDefinition</span>) &#123;</span><br><span class="line">    client = <span class="variable language_">this</span>.<span class="property">client</span>;</span><br><span class="line">    client.<span class="title function_">waitForVisible</span>(<span class="string">&#x27;#b_results&#x27;</span>, <span class="number">3000</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      client.<span class="title function_">getTitle</span>().<span class="title function_">then</span>(<span class="function"><span class="params">pageTitle</span> =&gt;</span> &#123;</span><br><span class="line">        assert.<span class="title function_">notEqual</span>(pageTitle.<span class="title function_">match</span>(title), <span class="literal">null</span>, callback, <span class="string">`页面标题中不包含<span class="subst">$&#123;title&#125;</span>`</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先启动selenium服务</span></span><br><span class="line">selenium-standalone start</span><br><span class="line"><span class="comment"># 执行cucumberjs</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>cucumber <a href="https://github.com/cucumber/cucumber-js">https://github.com/cucumber/cucumber-js</a><br>webdriverio <a href="http://webdriver.io/">http://webdriver.io/</a><br>cucumber-assert <a href="https://github.com/djungowski/cucumber-assert">https://github.com/djungowski/cucumber-assert</a></p><p>*示例代码基于cucumber 2.0.0-rc.6版本，与最终cucumber 2.0最终版可能存在不兼容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;抽时间看了下cucumber的js版本，分享下自己写的示例。代码地址： &lt;a href=&quot;https://github.com/lccf/codelibrary/tree/master/tscucumber&quot;&gt;https://github.com/lccf/codelibr</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="typescript" scheme="http://yoursite.com/tags/typescript/"/>
    
    <category term="cucumber" scheme="http://yoursite.com/tags/cucumber/"/>
    
    <category term="webdriverio" scheme="http://yoursite.com/tags/webdriverio/"/>
    
  </entry>
  
  <entry>
    <title>typescript使用npm替代typings</title>
    <link href="http://yoursite.com/2016/161229.html"/>
    <id>http://yoursite.com/2016/161229.html</id>
    <published>2016-12-29T11:21:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>用ts(typescript)写东西有一段时间了，之前库文件的提示使用typings管理，国内访问非常慢项目集成也不太方便。ts 2.0提供了npm包的形式来安装语法提示库，使用国内npm mirror速度飞快。用一个示例项目进行说明：</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> types_demo</span><br><span class="line"><span class="built_in">cd</span> types_demo</span><br><span class="line"><span class="built_in">mkdir</span> src</span><br><span class="line"><span class="built_in">mkdir</span> app</span><br><span class="line">npm install typescript jquery @types/jquery --save-dev</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>创建 types_demo&#x2F;tsconfig.json 文件，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;module&quot;</span>: <span class="string">&quot;commonjs&quot;</span>,</span><br><span class="line">    <span class="string">&quot;target&quot;</span>: <span class="string">&quot;es5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;noImplicitAny&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;removeComments&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;sourceRoot&quot;</span>: <span class="string">&quot;src&quot;</span>,</span><br><span class="line">    <span class="string">&quot;outDir&quot;</span>: <span class="string">&quot;app&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑 types_demo&#x2F;package.json，添加以下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;watch&quot;</span>: <span class="string">&quot;tsc -w&quot;</span>,</span><br><span class="line">  <span class="string">&quot;compile&quot;</span>: <span class="string">&quot;tsc -p .&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>创建 types_demo&#x2F;index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>types demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>types demo<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./node_modules/jquery/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./app/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 src&#x2F;index.ts</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> $a = $(<span class="string">&#x27;#test li&gt;a&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>($a.<span class="title function_">text</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>();</span><br></pre></td></tr></table></figure><h3 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h3><p>执行 npm run compile 编译ts文件到js，因为@types库已经有jquery的提示，编计不会报错。用浏览打开 index.html 代码正常运行，有console.log输出的内容。</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>使用 @types 语法库至少需要 ts 2.0.10（2.0已支持但有bug）以上版本。更多关于 @types 的配置查看 <a href="https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#types-typeroots-and-types">https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#types-typeroots-and-types</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用ts(typescript)写东西有一段时间了，之前库文件的提示使用typings管理，国内访问非常慢项目集成也不太方便。ts 2.0提供了npm包的形式来安装语法提示库，使用国内npm mirror速度飞快。用一个示例项目进行说明：&lt;/p&gt;
&lt;h3 id=&quot;创建项目&quot;&gt;</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="typescript" scheme="http://yoursite.com/tags/typescript/"/>
    
    <category term="typings" scheme="http://yoursite.com/tags/typings/"/>
    
    <category term="types" scheme="http://yoursite.com/tags/types/"/>
    
  </entry>
  
  <entry>
    <title>使用acmd构建jade/sass/livescript开发环境</title>
    <link href="http://yoursite.com/2016/205776.html"/>
    <id>http://yoursite.com/2016/205776.html</id>
    <published>2016-09-09T15:31:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>之前写过一个browserSync的脚本编译jade&#x2F;sass&#x2F;coffee，在多个项目中拷贝脚本文件比较麻烦，业余封装了一个npm插件，这里介绍一下用法。<br>项目地址：<a href="https://github.com/thinkjs/autocommand-cli">https://github.com/thinkjs/autocommand-cli</a> ，插件使用typescript开发，欢迎有兴趣的同学一起完善。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>1.创建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> example &amp;&amp; <span class="built_in">cd</span> example</span><br><span class="line"><span class="built_in">mkdir</span> _source _source/jade _source/sass _source/live</span><br><span class="line"><span class="built_in">mkdir</span> html html/css html/js</span><br></pre></td></tr></table></figure><p>_source目录存放源代码，_source&#x2F;jade、_source&#x2F;sass、_source&#x2F;live分别存放jade、sass、livescript源文件。html目录存放生成结果，html、html&#x2F;css、html&#x2F;js分别存放html、css、js文件。</p><p>2.安装npm包依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> &gt; package.json</span><br><span class="line">npm install lccf/autocommand-cli<span class="comment">#latest jade node-sass livescript --save-dev</span></span><br></pre></td></tr></table></figure><p>如果网络不好，建议使用cnpm替代</p><p>3.编辑package.json加以下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;acmd&quot;</span>: <span class="string">&quot;acmd&quot;</span>,</span><br><span class="line">  <span class="string">&quot;start&quot;</span>: <span class="string">&quot;acmd watch&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build&quot;</span>: <span class="string">&quot;acmd run&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>完整的package.json如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;acmd&quot;</span>: <span class="string">&quot;acmd&quot;</span>,</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;acmd watch&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;acmd run&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;autocommand-cli&quot;</span>: <span class="string">&quot;thinkjs/autocommand-cli#latest&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jade&quot;</span>: <span class="string">&quot;^1.11.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;livescript&quot;</span>: <span class="string">&quot;^1.5.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;node-sass&quot;</span>: <span class="string">&quot;^3.9.3&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.创建acmd配置文件并修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run acmd -- config -i</span><br></pre></td></tr></table></figure><p>默认在当前目录下创建名为_config的配置文件，编辑该配置文件<br>修改file字段内容为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;file&quot;</span>: [<span class="string">&quot;_source/**/*.&#123;jade,sass,ls&#125;&quot;</span>],</span><br></pre></td></tr></table></figure><p>修改define字段内容为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;define&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;_source/&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;.jade&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;file&quot;</span>: <span class="string">&quot;html/#&#123;fileName&#125;.html&quot;</span>,</span><br><span class="line">      <span class="string">&quot;command&quot;</span>: <span class="string">&quot;jade -Po html/ #&#123;file&#125;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;.sass&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;file&quot;</span>: <span class="string">&quot;html/css/#&#123;fileName&#125;.css&quot;</span>,</span><br><span class="line">      <span class="string">&quot;command&quot;</span>: <span class="string">&quot;node-sass --output-style compact #&#123;file&#125; html/css/#&#123;fileName&#125;.css&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;.ls&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;file&quot;</span>: <span class="string">&quot;html/js/#&#123;fileName&#125;.js&quot;</span>,</span><br><span class="line">      <span class="string">&quot;command&quot;</span>: <span class="string">&quot;lsc -co html/js/ #&#123;file&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>修改 browserSync &gt; init下的server为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;server&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;baseDir&quot;</span>: <span class="string">&quot;html/&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>完整配置文件如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 侦听的文件</span></span><br><span class="line">  <span class="string">&quot;file&quot;</span>: [<span class="string">&quot;_source/**/*.&#123;jade,sass,ls&#125;&quot;</span>],</span><br><span class="line">  <span class="comment">// 过滤</span></span><br><span class="line">  <span class="string">&quot;ignore&quot;</span>: [<span class="string">&quot;_*.*&quot;</span>, <span class="string">&quot;node_modules/&quot;</span>],</span><br><span class="line">  <span class="comment">// 变量</span></span><br><span class="line">  <span class="string">&quot;variable&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;localBin&quot;</span>: <span class="string">&quot;~/node_modules/.bin&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 环境变量</span></span><br><span class="line">  <span class="string">&quot;environment&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;:PATH&quot;</span>: <span class="string">&quot;#&#123;localBin&#125;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 定义</span></span><br><span class="line">  <span class="string">&quot;define&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;_source/&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;.jade&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;file&quot;</span>: <span class="string">&quot;html/#&#123;fileName&#125;.html&quot;</span>,</span><br><span class="line">        <span class="string">&quot;command&quot;</span>: <span class="string">&quot;jade -Po html/ #&#123;file&#125;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;.sass&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;file&quot;</span>: <span class="string">&quot;html/css/#&#123;fileName&#125;.css&quot;</span>,</span><br><span class="line">        <span class="string">&quot;command&quot;</span>: <span class="string">&quot;node-sass --output-style compact #&#123;file&#125; html/css/#&#123;fileName&#125;.css&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;.ls&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;file&quot;</span>: <span class="string">&quot;html/js/#&#123;fileName&#125;.js&quot;</span>,</span><br><span class="line">        <span class="string">&quot;command&quot;</span>: <span class="string">&quot;lsc -co html/js/ #&#123;file&#125;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// browserSync配置</span></span><br><span class="line">  <span class="string">&quot;browserSync&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// 初始化配置</span></span><br><span class="line">    <span class="string">&quot;init&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;server&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;baseDir&quot;</span>: <span class="string">&quot;html/&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;open&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;ui&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 启动livereload</span></span><br><span class="line">    <span class="string">&quot;reload&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// vim: se sw=2 ts=2 sts=2 ft=javascript et:</span></span><br></pre></td></tr></table></figure><h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><p>1.编译jade文件<br>创建_source&#x2F;jade&#x2F;index.jade，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    title jade page</span><br><span class="line">  body</span><br><span class="line">    h1 hello world</span><br></pre></td></tr></table></figure><p>在terminal中运行 npm start，浏览器访问 <a href="http://localhost:3000/">http://localhost:3000</a> ，可查看页面。</p><p>2.编译sass文件<br>创建_source&#x2F;sass&#x2F;style.sass，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">html, body</span><br><span class="line">  padding: 0</span><br><span class="line">  margin: 0</span><br><span class="line">  font-size: 16px</span><br><span class="line"> </span><br><span class="line">h1</span><br><span class="line">  color: green</span><br></pre></td></tr></table></figure><p>编辑_source&#x2F;jade&#x2F;index.jade加入对style.sass的引用，在head中插入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">link(href=&quot;css/style.css&quot; rel=&quot;stylesheet&quot;)</span><br></pre></td></tr></table></figure><p>保存查看浏览器，内容已自动刷新。</p><p>3.编译livescript文件<br>创建_source&#x2F;sass&#x2F;script.ls，内容如下：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log <span class="string">\hello</span></span><br></pre></td></tr></table></figure><p>编辑_source&#x2F;jade&#x2F;index.jade加入对script.ls的引用,在body中插下以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">script(src=&quot;js/index.js&quot;)</span><br></pre></td></tr></table></figure><p>保存可查看浏览器中的控制台输出。</p><h3 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h3><p>1.编译所有文件<br>有时需要对项目的所有源文件进行编译，使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>2.编译某一类型文件<br>比如需要编译所有的sass文件，可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build -- -f _source/sass/*.sass</span><br></pre></td></tr></table></figure><p>3.使用glob表达式匹配文件<br>-f选项支持glob表达式，使用引号括起即可，例如编译jade和sass可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build -- -f <span class="string">&#x27;_source/**/*.&#123;jade,sass&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>4.使用通道<br>如果使用git管理文件，需要编译git中已经修改的文件，可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -uno | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | npm run build -- -o</span><br></pre></td></tr></table></figure><p>使用find查找sass进行编译，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find _source -<span class="built_in">type</span> f | grep *.sass | npm run build -- -o</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>autocommand-cli项目最初的出发点是为了锻炼一下typescript的能力，经过半年的迭代，功能已经逐渐完善。命令行参数解析、文件改动侦听、http服务器功能都使用现成npm插件实现。前端的工具链不断完善，各种工具层出不穷，花大量时间造一个自己用起来的顺手的工具还是有点奢侈:)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前写过一个browserSync的脚本编译jade&amp;#x2F;sass&amp;#x2F;coffee，在多个项目中拷贝脚本文件比较麻烦，业余封装了一个npm插件，这里介绍一下用法。&lt;br&gt;项目地址：&lt;a href=&quot;https://github.com/thinkjs/auto</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="编译jade" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91jade/"/>
    
    <category term="编译sass" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91sass/"/>
    
    <category term="编译livescript" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91livescript/"/>
    
    <category term="前端编译工具" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>使用JS重写API拦截运营商广告</title>
    <link href="http://yoursite.com/2016/204189.html"/>
    <id>http://yoursite.com/2016/204189.html</id>
    <published>2016-07-21T15:21:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>近期公司站点通过联通4G网站访问时被运营商插入广告代码，通过手机抓包定位到运营商值入的广告代码。植入的广告代码通过在固定url的请求中添加内容插行一段js，通过body.appendChild在页面引入一段js代码。想到一个应急方案，通过改写appendChild来拦截广告，经测试有效。代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">var</span> rootEl = top.<span class="property">document</span>.<span class="property">body</span>;</span><br><span class="line"><span class="keyword">var</span> originAppendChild = rootEl.<span class="property">appendChild</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    rootEl.<span class="property">appendChild</span> = <span class="keyword">function</span> (<span class="params">elem</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> src = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> elem == <span class="string">&#x27;object&#x27;</span> &amp;&amp; elem != <span class="literal">null</span> &amp;&amp; elem.<span class="property">getAttribute</span>) &#123;</span><br><span class="line">        src = elem.<span class="title function_">getAttribute</span>(<span class="string">&#x27;src&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> src == <span class="string">&#x27;string&#x27;</span> &amp;&amp; src.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( src.<span class="title function_">match</span>(<span class="regexp">/^(?:http(?:s)?:)?\/\/\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;/</span>)</span><br><span class="line">            || src.<span class="title function_">match</span>(<span class="regexp">/cifenqi\.com/</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    originAppendChild.<span class="title function_">apply</span>(rootEl, [].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>, <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(e) &#123; &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>ISP广告干的是非法勾当多使用ip地址，因此直接屏蔽ip地址的元素。此方法只能应急可被绕过，难怪某度、某宝纷纷启用全站https。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;近期公司站点通过联通4G网站访问时被运营商插入广告代码，通过手机抓包定位到运营商值入的广告代码。植入的广告代码通过在固定url的请求中添加内容插行一段js，通过body.appendChild在页面引入一段js代码。想到一个应急方案，通过改写appendChild来拦截广告</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
    <category term="api重写" scheme="http://yoursite.com/tags/api%E9%87%8D%E5%86%99/"/>
    
    <category term="js拦截广告" scheme="http://yoursite.com/tags/js%E6%8B%A6%E6%88%AA%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>NERDTree插件API小记</title>
    <link href="http://yoursite.com/2015/192016.html"/>
    <id>http://yoursite.com/2015/192016.html</id>
    <published>2015-12-25T02:01:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>之前因为vim上的TFS插件一直不好使，自己写了一个简单的插件在vim上签出TFS源文件。为了在NERDTree上面集成菜单功能，研究了下NERDTree插件。年底忙里偷闲整理了一些关于NERDTree的知识点，分享出来。</p><p>1.添加NERDTree文件菜单<br>在vim插件目录创建一个nerdtree_plugin文件夹，在其中新建vim脚本文件，使用NERDTreeAddMenuItem函数添加一项按钮项。参数格式：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;text&#x27;</span>: <span class="string">&#x27;menu text&#x27;</span>, <span class="string">&#x27;shortcut&#x27;</span>: <span class="string">&#x27;short key&#x27;</span>, <span class="string">&#x27;callback&#x27;</span>:<span class="string">&#x27;callback function name&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> NERDTreeAddMenuItem(&#123; <span class="string">&#x27;text&#x27;</span>: <span class="string">&#x27;TFS Check (o)ut&#x27;</span>, <span class="string">&#x27;shortcut&#x27;</span>: <span class="string">&#x27;o&#x27;</span>, callback<span class="string">&#x27;: &#x27;</span>TFSCheckoutCallback<span class="string">&#x27; &#125;)</span></span><br></pre></td></tr></table></figure><p>2.获取当前文件节点</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> currentNode = <span class="variable">g:NERDTreeFileNode</span>.GetSelected()</span><br></pre></td></tr></table></figure><p>3.获取文件路径</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> currentFile = currentNode.path._strForGlob()</span><br></pre></td></tr></table></figure><p>4.更新文件状态</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cal</span> currentNode.path.refresh()</span><br><span class="line"><span class="keyword">cal</span> NERDTreeRender()</span><br><span class="line"><span class="comment">&quot; 当我们通过currentNode.path.refresh() 可以刷新文件节点，之后通过NERDTreeRender重绘获得更新。</span></span><br><span class="line"><span class="comment">&quot; 当通过操作修改了文件的属性后需要通过此操作更新文件状态。</span></span><br></pre></td></tr></table></figure><p>5.链接<br>附插件git地址：<a href="https://github.com/lccf/TFSCheckout">https://github.com/lccf/TFSCheckout</a><br>NERDTree FileNode参考:<a href="https://github.com/scrooloose/nerdtree/blob/5.0.0/lib/nerdtree/tree_file_node.vim">https://github.com/scrooloose/nerdtree/blob/5.0.0/lib/nerdtree/tree_file_node.vim</a><br>NERDTree Pathp参考:<a href="https://github.com/scrooloose/nerdtree/blob/5.0.0/lib/nerdtree/path.vim">https://github.com/scrooloose/nerdtree/blob/5.0.0/lib/nerdtree/path.vim</a><br>NERDTree Public API参考:<a href="https://github.com/scrooloose/nerdtree/blob/5.0.0/plugin/NERD_tree.vim#L164">https://github.com/scrooloose/nerdtree/blob/5.0.0/plugin/NERD_tree.vim#L164</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前因为vim上的TFS插件一直不好使，自己写了一个简单的插件在vim上签出TFS源文件。为了在NERDTree上面集成菜单功能，研究了下NERDTree插件。年底忙里偷闲整理了一些关于NERDTree的知识点，分享出来。&lt;/p&gt;
&lt;p&gt;1.添加NERDTree文件菜单&lt;b</summary>
      
    
    
    
    <category term="Vim" scheme="http://yoursite.com/categories/Vim/"/>
    
    
    <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
    <category term="vim tfs" scheme="http://yoursite.com/tags/vim-tfs/"/>
    
    <category term="tfs" scheme="http://yoursite.com/tags/tfs/"/>
    
    <category term="checkout" scheme="http://yoursite.com/tags/checkout/"/>
    
  </entry>
  
  <entry>
    <title>基于browser-sync的前端预处理器工作流</title>
    <link href="http://yoursite.com/2015/94975.html"/>
    <id>http://yoursite.com/2015/94975.html</id>
    <published>2015-05-29T10:45:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>之前使用预处理器一直是基于vim插件autocommand，最近和同事协作开发，vim入门太陡峭，抽了点时间用browser-sync实现了类似功能。具体功能如下：自动检测jade、sass、livescript等源码文件的改动，编译对应的html、css、js，更新改动到浏览器中打开的页面。</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>1.browser-sync nodejs插件，官方说明 Time-saving synchronised browser testing。<br>2.前端预处理器 jade、sass、livescript。<br>3.工作流 使用browser-sync整合jade、sass、livescript完成开发的一套流程。</p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><p>nodejs<br> npm package: jade、livescript、browser-sync<br>ruby<br> gem package: sass</p><h3 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">workspace/</span><br><span class="line">  _source/</span><br><span class="line">    jade/</span><br><span class="line">    sass/</span><br><span class="line">    live/</span><br><span class="line">  html</span><br><span class="line">    css/</span><br><span class="line">    js/</span><br><span class="line">    img/</span><br></pre></td></tr></table></figure><p>说明：_source目录下存放预处理器源代码，html目录存放生成的html、css、js等。</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>在workspace目录下创建 browserSync.ls 具体代码如下：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">path = <span class="built_in">require</span> <span class="string">\path</span></span><br><span class="line">exec = <span class="built_in">require</span> <span class="string">\child_process</span> .exec</span><br><span class="line">browserSync = <span class="built_in">require</span> <span class="string">\browser-sync</span> .create!</span><br><span class="line"> </span><br><span class="line"><span class="comment"># config &#123;&#123;&#123;</span></span><br><span class="line">outputDir = <span class="string">&#x27;html&#x27;</span></span><br><span class="line">cssOutputDir = <span class="string">&quot;<span class="subst">#outputDir</span>/css&quot;</span></span><br><span class="line">jsOutputDir = <span class="string">&quot;<span class="subst">#outputDir</span>/js&quot;</span></span><br><span class="line"> </span><br><span class="line">reloadWatchFile = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># &quot;#outputDir/*.html&quot;</span></span><br><span class="line">  <span class="comment"># &quot;#jsOutputDir/*.js&quot;</span></span><br><span class="line">  <span class="comment"># &quot;#outputDir/img/*.*&quot;</span></span><br><span class="line"> </span><br><span class="line">compileWatchFile =</span><br><span class="line">  <span class="string">&quot;_source/jade/*.jade&quot;</span></span><br><span class="line">  <span class="string">&quot;_source/sass/*.sass&quot;</span></span><br><span class="line">  <span class="string">&quot;_source/live/*.ls&quot;</span></span><br><span class="line"> </span><br><span class="line">autoCompileFile = <span class="literal">true</span></span><br><span class="line"><span class="comment"># &#125;&#125;&#125;</span></span><br><span class="line"><span class="comment"># getTimeToken &#123;&#123;&#123;</span></span><br><span class="line"><span class="function"><span class="title">getTimeToken</span> = -&gt;</span></span><br><span class="line">  currDate = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  hours = currDate.getHours()</span><br><span class="line">  minutes = currDate.getMinutes()</span><br><span class="line">  seconds = currDate.getSeconds()</span><br><span class="line">  <span class="keyword">if</span> hours &lt; <span class="number">10</span></span><br><span class="line">    hours = <span class="string">&quot;0<span class="subst">#hours</span>&quot;</span></span><br><span class="line">  <span class="keyword">if</span> minutes &lt; <span class="number">10</span></span><br><span class="line">    minutes = <span class="string">&quot;0<span class="subst">#minutes</span>&quot;</span></span><br><span class="line">  <span class="keyword">if</span> seconds &lt; <span class="number">10</span></span><br><span class="line">    seconds = <span class="string">&quot;0<span class="subst">#seconds</span>&quot;</span></span><br><span class="line">  <span class="string">&quot;<span class="subst">#hours</span>:<span class="subst">#minutes</span>:<span class="subst">#seconds</span>&quot;</span></span><br><span class="line"><span class="comment"># &#125;&#125;&#125;</span></span><br><span class="line"><span class="comment"># compileTask &#123;&#123;&#123;</span></span><br><span class="line"><span class="function"><span class="title">getCompileCmdAndFileName</span> = <span class="params">(file, ext)</span> -&gt;</span></span><br><span class="line">  filename = path.basename file, ext</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">switch</span> ext</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;.jade&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    compileFileName = <span class="string">&quot;<span class="subst">#outputDir</span>/<span class="subst">#&#123;filename&#125;</span>.html&quot;</span></span><br><span class="line">    cmd = <span class="string">&quot;jade -Po <span class="subst">#outputDir</span> <span class="subst">#file</span>&quot;</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;.sass&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    compileFileName = <span class="string">&quot;<span class="subst">#cssOutputDir</span>/<span class="subst">#&#123;filename&#125;</span>.css&quot;</span></span><br><span class="line">    cmd = <span class="string">&quot;sass --sourcemap=none --style compact <span class="subst">#file</span>|sed &#x27;/^@charset/d&#x27;&gt;<span class="subst">#compileFileName</span>&quot;</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;.coffee&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    compileFileName = <span class="string">&quot;<span class="subst">#jsOutputDir</span>/<span class="subst">#&#123;filename&#125;</span>.js&quot;</span></span><br><span class="line">    cmd = <span class="string">&quot;coffee --no-header -bco <span class="subst">#jsOutputDir</span> <span class="subst">#file</span>&quot;</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;.ls&#x27;</span> <span class="keyword">then</span></span><br><span class="line">    compileFileName = <span class="string">&quot;<span class="subst">#jsOutputDir</span>/<span class="subst">#&#123;filename&#125;</span>.js&quot;</span></span><br><span class="line">    cmd = <span class="string">&quot;lsc --no-header -bco <span class="subst">#jsOutputDir</span> <span class="subst">#file</span>&quot;</span></span><br><span class="line">  <span class="keyword">default</span></span><br><span class="line">    compileFileName = cmd = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  [cmd, compileFileName]</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">compileTask</span> = <span class="params">(file, ext, reload)</span> !-&gt;</span></span><br><span class="line">  cmdIndex = -<span class="number">1</span></span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">    [cmd, filename] = getCompileCmdAndFileName file, ext</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> cmd <span class="keyword">or</span> <span class="keyword">not</span> filename</span><br><span class="line">    console.log <span class="string">&quot;cmd not define. file: <span class="subst">#file</span> ext: <span class="subst">#ext</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># exec callback</span></span><br><span class="line">  <span class="function"><span class="title">execCallback</span> = <span class="params">(err, stdo, stde)</span> !-&gt;</span></span><br><span class="line">    <span class="keyword">if</span> err <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">and</span> <span class="keyword">not</span> stde</span><br><span class="line">      <span class="keyword">if</span> cmdIndex <span class="keyword">is</span> -<span class="number">1</span></span><br><span class="line">        console.log <span class="string">&quot;[<span class="subst">#&#123;getTimeToken!&#125;</span>] compiled <span class="subst">#filename</span>&quot;</span></span><br><span class="line">        reload filename <span class="keyword">if</span> reload</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        execCmd()</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      console.log err || stde</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># execute command</span></span><br><span class="line">  <span class="keyword">do</span> <span class="function"><span class="title">execCmd</span> = !-&gt;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">Array</span>.isArray cmd</span><br><span class="line">      currCmd = cmd[++cmdIndex]</span><br><span class="line">      <span class="keyword">if</span> cmd.length &lt;= cmdIndex+<span class="number">1</span></span><br><span class="line">        ``<span class="language-javascript">cmdIndex = -<span class="number">1</span>;</span>``</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      currCmd = cmd</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> currCmd</span><br><span class="line">      exec currCmd, execCallback</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">compileCallback</span> = <span class="params">(file)</span> !-&gt;</span></span><br><span class="line">  ext = path.extname file</span><br><span class="line">  filename = path.basename file</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># ignore partial file</span></span><br><span class="line">  <span class="keyword">if</span> filename.charAt(<span class="number">0</span>) <span class="keyword">is</span> <span class="string">&#x27;_&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">undefined</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">switch</span> ext</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;.jade&#x27;</span>, <span class="string">&#x27;.coffee&#x27;</span>, <span class="string">&#x27;.ls&#x27;</span>, <span class="string">&#x27;.sass&#x27;</span></span><br><span class="line">    <span class="comment">#   compileTask file, ext</span></span><br><span class="line">    <span class="comment"># case &#x27;.sass&#x27;</span></span><br><span class="line">    compileTask file, ext, browserSync.reload</span><br><span class="line">  <span class="keyword">default</span></span><br><span class="line">    console.log <span class="string">&#x27;unknown file type.&#x27;</span></span><br><span class="line"><span class="comment"># &#125;&#125;&#125;</span></span><br><span class="line"><span class="comment"># browserSync &#123;&#123;&#123;</span></span><br><span class="line">browserSync.init <span class="keyword">do</span></span><br><span class="line">  server:</span><br><span class="line">    baseDir: outputDir</span><br><span class="line">    index: <span class="string">\index.html</span></span><br><span class="line">  open: <span class="literal">false</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> reloadWatchFile <span class="keyword">and</span> reloadWatchFile.length</span><br><span class="line">  browserSync.watch reloadWatchFile</span><br><span class="line">  .<span class="literal">on</span> <span class="string">\change,</span> browserSync.reload</span><br><span class="line"> </span><br><span class="line">wacher = browserSync.watch compileWatchFile</span><br><span class="line">.<span class="literal">on</span> <span class="string">\change,</span> compileCallback</span><br><span class="line"><span class="comment"># auto compile file</span></span><br><span class="line"><span class="keyword">if</span> autoCompileFile</span><br><span class="line">  wacher.<span class="literal">on</span> <span class="string">\add,</span> compileCallback</span><br><span class="line"><span class="comment"># &#125;&#125;&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># vim: set sw=2 ts=2 sts=2 et fdm=marker:</span></span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> workspace</span><br><span class="line">lsc browserSync.ls</span><br></pre></td></tr></table></figure><p><em>lsc 是 livescript的命令，使用npm 全局安装 livescript 后方可使用。</em></p><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><p>outputDir        html文件的输出目录，web server的根目录。<br>cssOutputDir     css文件输出目录。<br>jsOutputDir      js文件输出目录。<br>reloadWatchFile  检测改动的目录，如果文件发生变更，会更新到打开的页面中。html&#x2F;css&#x2F;js已自动更新，默认可留空。<br>compileWatchFile 监测的源码文件，如果发生变化执行编译任务。<br>autoCompileFile  自动编译文件，设为true时，每次启动会把所有的源码文件编译一遍。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前使用预处理器一直是基于vim插件autocommand，最近和同事协作开发，vim入门太陡峭，抽了点时间用browser-sync实现了类似功能。具体功能如下：自动检测jade、sass、livescript等源码文件的改动，编译对应的html、css、js，更新改动到</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="browser-sync" scheme="http://yoursite.com/tags/browser-sync/"/>
    
    <category term="web开发" scheme="http://yoursite.com/tags/web%E5%BC%80%E5%8F%91/"/>
    
    <category term="前端预处理器" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8/"/>
    
    <category term="browser-sync例子" scheme="http://yoursite.com/tags/browser-sync%E4%BE%8B%E5%AD%90/"/>
    
    <category term="frontend preprocessor" scheme="http://yoursite.com/tags/frontend-preprocessor/"/>
    
  </entry>
  
  <entry>
    <title>用vim正则环视优化vim-coloresque插件</title>
    <link href="http://yoursite.com/2015/81252.html"/>
    <id>http://yoursite.com/2015/81252.html</id>
    <published>2015-03-20T13:45:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>vim-coloresque是一款高亮插件，将css&#x2F;sass&#x2F;less中的颜色用背景色高亮出来方便预览。用了一段时间发现代码补全一定程度上受影响，自己对插件进行了一些优化，修改后git地址：<a href="https://github.com/lccf/vim-coloresque">https://github.com/lccf/vim-coloresque</a> 。</p><p>看插件github上的issue，插件中对isk这个选项的设置影响了补全，全并且影响了vim全局的keyword识别，直接注释掉isk+&#x3D;-、isk+&#x3D;#、 isk+&#x3D;# 解决了补全问题但针对colorDict的高亮识别又发生错误，例如样式名为 .red或.common-red-btn，此处的red会被高亮。作者使用”&lt;“单词边界来识别colorDict，修改isk以后单词边界识别出错高亮出错，想到用正则表达式来调整此处的colorDict匹配。</p><p>匹配规则如下：</p><ol><li>前字符为行首或空白或:（冒号）</li><li>后字符为行尾或空白或;（分号）</li></ol><p>正则如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;\(^\|\s\|:\)\@&lt;=\c&#x27;</span>._color.<span class="string">&#x27;\($\|\s\|;\)\@=&#x27;</span></span><br></pre></td></tr></table></figure><p>vim中使用@&lt;&#x3D;作逆序环视、@&#x3D;做顺序环视(vim中使用:h @&lt;&#x3D;查看详细介绍)，修改后效果不错，符合我的应用场景。diff代码如下：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">From f162c7a118caba4af655741feeae11720329bb4e Mon Sep 17 00:00:00 2001</span><br><span class="line">From: leaf</span><br><span class="line">Date: Wed, 21 Jan 2015 16:27:40 +0800</span><br><span class="line">Subject: [PATCH] remove &quot;isk&quot; change, improve color dict regexp</span><br><span class="line"> </span><br><span class="line"><span class="comment">---</span></span><br><span class="line"> after/syntax/css/vim-coloresque.vim | 11 +++++++----</span><br><span class="line"> 1 file changed, 7 insertions(+), 4 deletions(-)</span><br><span class="line"> </span><br><span class="line"><span class="comment">diff --git a/after/syntax/css/vim-coloresque.vim b/after/syntax/css/vim-coloresque.vim</span></span><br><span class="line"><span class="comment">index c80a9a5..b60f863 100644</span></span><br><span class="line"><span class="comment">--- a/after/syntax/css/vim-coloresque.vim</span></span><br><span class="line"><span class="comment">+++ b/after/syntax/css/vim-coloresque.vim</span></span><br><span class="line"><span class="meta">@@ -122,9 +122,9 @@</span> function! s:VimCssInit(update)</span><br><span class="line">     if a:update==1</span><br><span class="line">         call s:ClearMatches()</span><br><span class="line">     endif</span><br><span class="line"><span class="deletion">-    :set isk+=-</span></span><br><span class="line"><span class="deletion">-    :set isk+=#</span></span><br><span class="line"><span class="deletion">-    :set isk+=.</span></span><br><span class="line"><span class="addition">+    &quot; :set isk+=-</span></span><br><span class="line"><span class="addition">+    &quot; :set isk+=#</span></span><br><span class="line"><span class="addition">+    &quot; :set isk+=.</span></span><br><span class="line">  </span><br><span class="line">     if len(keys(b:color_pattern))&gt;0</span><br><span class="line">         call s:RestoreColors()</span><br><span class="line"><span class="meta">@@ -301,7 +301,10 @@</span> function! s:AdditionalColors()</span><br><span class="line">   &quot;let w:colorDictRegExp = &#x27;\(&#x27; </span><br><span class="line">   for _color in keys(w:colorDict)</span><br><span class="line">     &quot;let w:colorDictRegExp.=&#x27;\&lt;&#x27;._color.&#x27;\&gt;\|&#x27; </span><br><span class="line"><span class="deletion">-    call s:MatchColorValue(strpart(w:colorDict[tolower(_color)], 1), &#x27;\&lt;\c&#x27;._color.&#x27;\&gt;&#x27;)</span></span><br><span class="line"><span class="addition">+    &quot; old</span></span><br><span class="line"><span class="addition">+    &quot; call s:MatchColorValue(strpart(w:colorDict[tolower(_color)], 1), &#x27;\&lt;\c&#x27;._color.&#x27;\&gt;&#x27;)</span></span><br><span class="line"><span class="addition">+    &quot; new regexp</span></span><br><span class="line"><span class="addition">+    call s:MatchColorValue(strpart(w:colorDict[tolower(_color)], 1), &#x27;\(^\|\s\|:\)\@&lt;=\c&#x27;._color.&#x27;\($\|\s\|;\)\@=&#x27;)</span></span><br><span class="line">   endfor</span><br><span class="line">   &quot;let w:colorDictRegExp=strpart(w:colorDictRegExp, 0, len(w:colorDictRegExp)-2).&#x27;\)\c&#x27;</span><br><span class="line"> endfunction</span><br><span class="line"><span class="deletion">-- </span></span><br><span class="line">1.7.11.1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vim-coloresque是一款高亮插件，将css&amp;#x2F;sass&amp;#x2F;less中的颜色用背景色高亮出来方便预览。用了一段时间发现代码补全一定程度上受影响，自己对插件进行了一些优化，修改后git地址：&lt;a href=&quot;https://github.com/lcc</summary>
      
    
    
    
    <category term="Vim" scheme="http://yoursite.com/categories/Vim/"/>
    
    
    <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
    <category term="vim-coloresque" scheme="http://yoursite.com/tags/vim-coloresque/"/>
    
    <category term="vim正则环视" scheme="http://yoursite.com/tags/vim%E6%AD%A3%E5%88%99%E7%8E%AF%E8%A7%86/"/>
    
    <category term="vim正则断言" scheme="http://yoursite.com/tags/vim%E6%AD%A3%E5%88%99%E6%96%AD%E8%A8%80/"/>
    
    <category term="vim正则前瞻后顾" scheme="http://yoursite.com/tags/vim%E6%AD%A3%E5%88%99%E5%89%8D%E7%9E%BB%E5%90%8E%E9%A1%BE/"/>
    
  </entry>
  
  <entry>
    <title>win平台配置vim-addon-manager</title>
    <link href="http://yoursite.com/2014/46589.html"/>
    <id>http://yoursite.com/2014/46589.html</id>
    <published>2014-10-20T14:09:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>vim-addon-manager是一款功能非常强大的vim插件管理工具，但其依赖git, hg, svn, curl, unzip等工具在win平台配置较繁琐，一直没在win平台中使用这种方案。这两天在试着在win平台配置，分享一下配置过程。</p><p>1.依赖程序<br>1.1 git 主页 <a href="http://msysgit.github.io/">http://msysgit.github.io/</a><br>下载地址：<a href="https://github.com/msysgit/msysgit/releases/download/Git-1.9.2-preview20140411/Git-1.9.2-preview20140411.exe">https://github.com/msysgit/msysgit/releases/download/Git-1.9.2-preview20140411/Git-1.9.2-preview20140411.exe</a></p><p>1.2 svn 主页 <a href="http://www.sliksvn.com/">http://www.sliksvn.com/</a><br>下载地址：<a href="http://www.sliksvn.com/pub/Slik-Subversion-1.8.9-x64.msi">http://www.sliksvn.com/pub/Slik-Subversion-1.8.9-x64.msi</a></p><p>1.3 hg 主页 <a href="http://mercurial.selenic.com/">http://mercurial.selenic.com/</a><br>下载地址：<a href="http://mercurial.selenic.com/release/windows/Mercurial-3.0.exe">http://mercurial.selenic.com/release/windows/Mercurial-3.0.exe</a></p><p>msysgit包中带有curl以及unzip等工具</p><p>2.添加环境变量<br>编辑vim配置文件($VIM&#x2F;.vimrc)为vim指定相关环境变量（将C:\Program Files替换成自己的安装路径）</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">has</span>(<span class="string">&#x27;win32&#x27;</span>) &amp;&amp; <span class="keyword">match</span>($PATH,<span class="string">&#x27;SlikSvn&#x27;</span>)&lt;<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">let</span> $PATH=$PATH.<span class="string">&#x27;;C:\Program Files\SlikSvn\bin;C:\Program Files\Mercurial;C:\Program Files\Git\bin&#x27;</span></span><br><span class="line"><span class="keyword">en</span></span><br></pre></td></tr></table></figure><p>3.下载vim-addon-manager并配置<br>从<a href="https://github.com/MarcWeber/vim-addon-manager">https://github.com/MarcWeber/vim-addon-manager</a> 获取源代码到插件目录，在vimrc中添加配置。<br>附官方建议配置：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">fun! SetupVAM()</span><br><span class="line">  <span class="keyword">let</span> <span class="keyword">c</span> = <span class="built_in">get</span>(g:, <span class="string">&#x27;vim_addon_manager&#x27;</span>, &#123;&#125;)</span><br><span class="line">  <span class="keyword">let</span> <span class="variable">g:vim_addon_manager</span> = <span class="keyword">c</span></span><br><span class="line">  <span class="keyword">let</span> <span class="keyword">c</span>.plugin_root_dir = <span class="built_in">expand</span>(<span class="string">&#x27;$HOME&#x27;</span>, <span class="number">1</span>) . <span class="string">&#x27;/.vim/vim-addons&#x27;</span></span><br><span class="line">  <span class="comment">&quot; most used options you may want to use:</span></span><br><span class="line">  <span class="comment">&quot; let c.log_to_buf = 1</span></span><br><span class="line">  <span class="comment">&quot; let c.auto_install = 0</span></span><br><span class="line">  <span class="keyword">let</span> &amp;rtp.=(<span class="built_in">empty</span>(&amp;rtp)?<span class="string">&#x27;&#x27;</span>:<span class="string">&#x27;,&#x27;</span>).<span class="keyword">c</span>.plugin_root_dir.<span class="string">&#x27;/vim-addon-manager&#x27;</span></span><br><span class="line">  <span class="keyword">if</span> !isdirectory(<span class="keyword">c</span>.plugin_root_dir.<span class="string">&#x27;/vim-addon-manager/autoload&#x27;</span>)</span><br><span class="line">    <span class="keyword">execute</span> <span class="string">&#x27;!git clone --depth=1 git://github.com/MarcWeber/vim-addon-manager &#x27;</span></span><br><span class="line">        \       <span class="built_in">shellescape</span>(<span class="keyword">c</span>.plugin_root_dir.<span class="string">&#x27;/vim-addon-manager&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">endif</span></span><br><span class="line">  <span class="keyword">call</span> vam#ActivateAddons([], &#123;<span class="string">&#x27;auto_install&#x27;</span> : <span class="number">0</span>&#125;)</span><br><span class="line">endfun</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> SetupVAM()</span><br><span class="line">VAMActivate matchit.zip <span class="keyword">vim</span>-addon-commenting</span><br></pre></td></tr></table></figure><p>不建议将所有配置内容都放在vimrc中，向大家推荐我整理的vim配置分割方案：<a href="http://zshou.i11r.com/posts/39266.html">http://zshou.i11r.com/posts/39266.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vim-addon-manager是一款功能非常强大的vim插件管理工具，但其依赖git, hg, svn, curl, unzip等工具在win平台配置较繁琐，一直没在win平台中使用这种方案。这两天在试着在win平台配置，分享一下配置过程。&lt;/p&gt;
&lt;p&gt;1.依赖程序&lt;</summary>
      
    
    
    
    <category term="Vim" scheme="http://yoursite.com/categories/Vim/"/>
    
    
    <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
    <category term="vam" scheme="http://yoursite.com/tags/vam/"/>
    
    <category term="vim-addon-manager" scheme="http://yoursite.com/tags/vim-addon-manager/"/>
    
    <category term="vim-addon-manager in windows" scheme="http://yoursite.com/tags/vim-addon-manager-in-windows/"/>
    
    <category term="windows配置vim-addon-manager" scheme="http://yoursite.com/tags/windows%E9%85%8D%E7%BD%AEvim-addon-manager/"/>
    
  </entry>
  
  <entry>
    <title>vim缩进参考线</title>
    <link href="http://yoursite.com/2014/65642.html"/>
    <id>http://yoursite.com/2014/65642.html</id>
    <published>2014-10-20T14:09:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>编辑缩进嵌套的文件时想找到对应的层级比较困难，写了一个函数，使用cc选项设定一条辅助线，标识到指定的缩进层级。代码如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"># ReferenceLine</span><br><span class="line"><span class="comment">&quot; --------------------------------------------------</span></span><br><span class="line"><span class="comment">&quot; [参考线切换] &#123;&#123;&#123;</span></span><br><span class="line"><span class="comment">&quot; --------------------------------------------------</span></span><br><span class="line">fu! ReferenceLine(t)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">exists</span>(<span class="string">&#x27;w:ccnum&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> ccnum=<span class="variable">w:ccnum</span></span><br><span class="line">    <span class="keyword">elsei</span> <span class="built_in">exists</span>(<span class="string">&#x27;b:ccnum&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> ccnum=<span class="variable">b:ccnum</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">let</span> ccnum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">en</span></span><br><span class="line">    <span class="keyword">let</span> oldcc=ccnum</span><br><span class="line">    <span class="comment">&quot; let ccc=&amp;cc</span></span><br><span class="line">    <span class="comment">&quot; ec oldcc</span></span><br><span class="line">    <span class="keyword">let</span> ccc=<span class="string">&#x27;,&#x27;</span>.&amp;<span class="keyword">cc</span>.<span class="string">&#x27;,&#x27;</span></span><br><span class="line">    <span class="comment">&quot; add/sub</span></span><br><span class="line">    <span class="keyword">if</span> <span class="variable">a:t</span>==<span class="string">&#x27;add&#x27;</span> || <span class="variable">a:t</span>==<span class="string">&#x27;sub&#x27;</span></span><br><span class="line">        <span class="comment">&quot; check old cc</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">match</span>(ccc, <span class="string">&#x27;,&#x27;</span>.oldcc.<span class="string">&#x27;,&#x27;</span>)&lt;<span class="number">0</span></span><br><span class="line">            <span class="keyword">let</span> oldcc=<span class="number">0</span></span><br><span class="line">            <span class="keyword">let</span> ccnum=<span class="number">0</span></span><br><span class="line">        <span class="keyword">en</span></span><br><span class="line">        <span class="comment">&quot; step</span></span><br><span class="line">        <span class="keyword">let</span> csw=&amp;<span class="keyword">sw</span></span><br><span class="line">        <span class="keyword">if</span> <span class="variable">a:t</span>==<span class="string">&#x27;add&#x27;</span></span><br><span class="line">            <span class="keyword">let</span> ccnum=ccnum + csw</span><br><span class="line">        <span class="keyword">elsei</span> <span class="variable">a:t</span>==<span class="string">&#x27;sub&#x27;</span></span><br><span class="line">            <span class="keyword">let</span> ccnum=ccnum - csw</span><br><span class="line">            <span class="keyword">if</span> ccnum &lt; <span class="number">0</span> | <span class="keyword">let</span> ccnum=<span class="number">0</span> | <span class="keyword">en</span></span><br><span class="line">        <span class="keyword">en</span></span><br><span class="line">        <span class="keyword">if</span> oldcc &gt; <span class="number">0</span> | <span class="keyword">let</span> ccc=<span class="keyword">substitute</span>(ccc, <span class="string">&#x27;,&#x27;</span>.oldcc.<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;&#x27;</span>) | <span class="keyword">en</span></span><br><span class="line">        <span class="keyword">let</span> ccc=ccc.ccnum</span><br><span class="line">        <span class="comment">&quot; ec ccc</span></span><br><span class="line">        <span class="comment">&quot; ec ccnum</span></span><br><span class="line">        <span class="keyword">let</span> ccc=<span class="keyword">substitute</span>(ccc, <span class="string">&#x27;^0,\|,0,\|,0$&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> ccc=<span class="keyword">substitute</span>(ccc, <span class="string">&#x27;^,\+\|,\+$&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">        <span class="comment">&quot; ec ccc</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">w:ccnum</span>=ccnum</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">b:ccnum</span>=ccnum</span><br><span class="line">        exec <span class="string">&quot;setl cc=&quot;</span>.ccc</span><br><span class="line">    <span class="comment">&quot; del</span></span><br><span class="line">    <span class="keyword">elsei</span> <span class="variable">a:t</span>==<span class="string">&#x27;del&#x27;</span></span><br><span class="line">        <span class="keyword">let</span> ccc=<span class="keyword">substitute</span>(ccc, <span class="string">&#x27;,&#x27;</span>.oldcc.<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> ccc=<span class="keyword">substitute</span>(ccc, <span class="string">&#x27;^,\+\|,\+$&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">        <span class="comment">&quot; ec ccc</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">w:ccnum</span>=<span class="number">0</span></span><br><span class="line">        <span class="keyword">let</span> <span class="variable">b:ccnum</span>=<span class="number">0</span></span><br><span class="line">        exec <span class="string">&quot;setl cc=&quot;</span>.ccc</span><br><span class="line">    <span class="keyword">en</span></span><br><span class="line"><span class="keyword">endf</span></span><br><span class="line"><span class="keyword">nn</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;A-u&gt;</span> :<span class="keyword">call</span> ReferenceLine(<span class="string">&#x27;sub&#x27;</span>)<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nn</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;A-o&gt;</span> :<span class="keyword">call</span> ReferenceLine(<span class="string">&#x27;add&#x27;</span>)<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; &#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>使用方法：</p><ul><li>Alt+o 增加参考线</li><li>Alt+u 减少参考线</li></ul><p>最后两行是键映射，可以按照需求自行修改。设定参考线后，如果想要设定cc做列宽参照，请使用<code>set cc+=&lt;num&gt;</code>来设定。</p><p>效果如下：左侧的是缩进辅助线，右侧的是手动设置的列宽参照。<br><img src="/img/201410/2014-10-20_65642.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编辑缩进嵌套的文件时想找到对应的层级比较困难，写了一个函数，使用cc选项设定一条辅助线，标识到指定的缩进层级。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="Vim" scheme="http://yoursite.com/categories/Vim/"/>
    
    
    <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
    <category term="vim参考线" scheme="http://yoursite.com/tags/vim%E5%8F%82%E8%80%83%E7%BA%BF/"/>
    
    <category term="vim reference line" scheme="http://yoursite.com/tags/vim-reference-line/"/>
    
    <category term="vim缩进参考" scheme="http://yoursite.com/tags/vim%E7%BC%A9%E8%BF%9B%E5%8F%82%E8%80%83/"/>
    
    <category term="vim indent reference" scheme="http://yoursite.com/tags/vim-indent-reference/"/>
    
  </entry>
  
  <entry>
    <title>devise配置登录超时和单处登陆</title>
    <link href="http://yoursite.com/2014/45724.html"/>
    <id>http://yoursite.com/2014/45724.html</id>
    <published>2014-05-06T12:19:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>1.配置用户超时<br><code>&lt;Project&gt;/config/initializers/devise.rb</code><br>编辑 # config.timeout_in &#x3D; 30.minutes 这一行，修改为想要配置的时间</p><p><code>&lt;Project&gt;/app/models/user.rb</code><br>配置devise :database_authenticatable, :registerable,这一行，加上 :timeoutable</p><p>2.设置用户单处登陆<br>原理：devise在用户登陆后会设置users表中的current_sign_in_at字段为最后一次登陆的时间，用户每次登陆后在session中保存current_sign_in_at字段，在application中校验session中current_sign_in_at字段，如果为空或者小于current_user对象的current_sign_in_at则强制注销</p><p>2.1 在application_controller基类中定义after_sign_in_path_for方法在当中设置session对象</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">after_sign_in_path_for</span><span class="params">(resource)</span></span></span><br><span class="line">  session[<span class="symbol">:current_sign_in_at</span>] = current_user.current_sign_in_at</span><br><span class="line">  root_path</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>2.2 定义has_signed取代:authenticate_user!判断用户登陆</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_signed</span></span></span><br><span class="line">  <span class="keyword">unless</span> user_signed_in?</span><br><span class="line">    redirect_to root_path</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="symbol">:current_sign_in_at</span>] == <span class="literal">nil</span> <span class="keyword">or</span> session[<span class="symbol">:current_sign_in_at</span>] &lt; current_user.current_sign_in_at</span><br><span class="line">      redirect_to destroy_user_session_path</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>2.3 在需要判断用户登陆的controller中添加before_action :has_signed过滤器。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.配置用户超时&lt;br&gt;&lt;code&gt;&amp;lt;Project&amp;gt;/config/initializers/devise.rb&lt;/code&gt;&lt;br&gt;编辑 # config.timeout_in &amp;#x3D; 30.minutes 这一行，修改为想要配置的时间&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="积累点滴" scheme="http://yoursite.com/categories/%E7%A7%AF%E7%B4%AF%E7%82%B9%E6%BB%B4/"/>
    
    
    <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
    <category term="devise" scheme="http://yoursite.com/tags/devise/"/>
    
    <category term="登录超时" scheme="http://yoursite.com/tags/%E7%99%BB%E5%BD%95%E8%B6%85%E6%97%B6/"/>
    
    <category term="devise单用户登录" scheme="http://yoursite.com/tags/devise%E5%8D%95%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>rails判断浏览器head设置多语言</title>
    <link href="http://yoursite.com/2014/42539.html"/>
    <id>http://yoursite.com/2014/42539.html</id>
    <published>2014-01-22T14:15:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>给rails系统加i18n，根据浏览器的头去识别用户语言。记录一下相关实现：</p><p>1.添加i18n配置</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/application.rb</span></span><br><span class="line">config.i18n.load_path += Dir[Rails.root.join(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;locales&#x27;</span>, <span class="string">&#x27;**&#x27;</span>, <span class="string">&#x27;*.&#123;rb,yml&#125;&#x27;</span>)]</span><br><span class="line">config.i18n.available_locales = [<span class="symbol">:en</span>, <span class="symbol">:cn</span>]</span><br><span class="line">config.i18n.default_locale = <span class="symbol">:cn</span></span><br></pre></td></tr></table></figure><p>2.获取语言设置</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/controller/application_controller.rb</span></span><br><span class="line">before_action <span class="symbol">:set_locale</span></span><br><span class="line"><span class="comment"># set local &#123;&#123;&#123;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_locale</span></span></span><br><span class="line">  I18n.locale = get_locale</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># &#125;&#125;&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># locale &#123;&#123;&#123;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_locale</span></span></span><br><span class="line">  locale = I18n.default_locale</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> params[<span class="symbol">:locale</span>]</span><br><span class="line">    locale = params[<span class="symbol">:locale</span>].downcase</span><br><span class="line">  <span class="keyword">elsif</span> cookies[<span class="symbol">:locale</span>]</span><br><span class="line">    locale = cookies[<span class="symbol">:locale</span>]</span><br><span class="line">  <span class="keyword">elsif</span> locale = get_accept_language</span><br><span class="line">    locale</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="comment"># set cookies</span></span><br><span class="line">  <span class="keyword">if</span> cookies[<span class="symbol">:locale</span>] != locale</span><br><span class="line">    cookies[<span class="symbol">:locale</span>] = locale</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">  locale</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_accept_language</span></span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    first_lang = request.env[<span class="string">&#x27;HTTP_ACCEPT_LANGUAGE&#x27;</span>].split(<span class="string">&#x27;;&#x27;</span>).first</span><br><span class="line">    default_lang = first_lang[<span class="number">0</span>,<span class="number">2</span>].downcase</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> default_lang == <span class="string">&#x27;zh&#x27;</span></span><br><span class="line">      first_lang[<span class="number">3</span>,<span class="number">2</span>].downcase</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      default_lang</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">rescue</span></span><br><span class="line">    <span class="literal">nil</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># &#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>说明：locale的值优先从url地址读取，次之从cookie，最后从浏览器头判断。英文浏览器的头为Accept-Language:en-US,en;，取en即前两位。中文浏览器头为Accept-Language:zh-CN,zh;，取cn即3-5位，转为小写。</p><p>3.编辑语言文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/locales/en.yml</span></span><br><span class="line"><span class="attr">en:</span></span><br><span class="line"> <span class="attr">hello:</span> <span class="string">&quot;Hello world&quot;</span></span><br><span class="line"><span class="comment"># config/locales/cn.yml</span></span><br><span class="line"><span class="attr">cn:</span></span><br><span class="line"> <span class="attr">hello:</span> <span class="string">&quot;你好&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在模板文件中应用</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># app/views/home/index.html.erb</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&lt;%= t(&#x27;hello&#x27;); %&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  &lt;% I18n.available_locales.each.each do |locale| %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;%= link_to locale, params.merge(locale: locale) %&gt;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  &lt;% end %&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>说明：点击生成的链接可以手动切换语言，测试的时候方便一些。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;给rails系统加i18n，根据浏览器的头去识别用户语言。记录一下相关实现：&lt;/p&gt;
&lt;p&gt;1.添加i18n配置&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="积累点滴" scheme="http://yoursite.com/categories/%E7%A7%AF%E7%B4%AF%E7%82%B9%E6%BB%B4/"/>
    
    
    <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
    <category term="i18n" scheme="http://yoursite.com/tags/i18n/"/>
    
    <category term="rails多语言" scheme="http://yoursite.com/tags/rails%E5%A4%9A%E8%AF%AD%E8%A8%80/"/>
    
    <category term="浏览器自动多语言识别" scheme="http://yoursite.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>devise使用ajax登录</title>
    <link href="http://yoursite.com/2013/42130.html"/>
    <id>http://yoursite.com/2013/42130.html</id>
    <published>2013-12-18T10:29:00.000Z</published>
    <updated>2022-03-11T12:52:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>devise默认已经有较好的ajax支持了，只需要简单的配置一下即可使用ajax登录&#x2F;注册。</p><p>1.修改config&#x2F;application.rb加下以下配置，启用json输出。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># devise respond_to json</span></span><br><span class="line">config.to_prepare <span class="keyword">do</span></span><br><span class="line">  DeviseController.respond_to <span class="symbol">:html</span>, <span class="symbol">:json</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>2.修改form标签，添加data-remote, data-type，设置id</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= form_for(resource, :as =&gt; resource_name, :url =&gt; session_path(resource_name), :remote =&gt; true,</span><br><span class="line"> html: &#123;id: &#x27;ajax_user_signin&#x27;, data: &#123;type: :json&#125;&#125;) do |f| %&gt;</span><br></pre></td></tr></table></figure><p>3.设置ajax头</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajaxSetup</span>(&#123;</span><br><span class="line">  <span class="attr">beforeSend</span>: <span class="keyword">function</span>(<span class="params">xhr</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> token;</span><br><span class="line">    token = $(<span class="string">&#x27;meta[name=&quot;csrf-token&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;X-CSRF-Token&#x27;</span>, token);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.js处理代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#ajax_user_signin&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;ajax:complete&#x27;</span>, <span class="keyword">function</span>(<span class="params">e, xhr, type</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="title function_">alert</span>(xhr.<span class="property">responseJSON</span>.<span class="property">error</span>);</span><br><span class="line">      <span class="comment">// this.reset();</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (e$) &#123;</span><br><span class="line">      e = e$;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>关于注册：<br>注册的方法和登录基本相同，给form_for添加data-remote、data-type和id等属性。需要注意的是注册返回的表单验证是多项错误，使用xhr.resonseJSON.errors获取错误集合。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;devise默认已经有较好的ajax支持了，只需要简单的配置一下即可使用ajax登录&amp;#x2F;注册。&lt;/p&gt;
&lt;p&gt;1.修改config&amp;#x2F;application.rb加下以下配置，启用json输出。&lt;/p&gt;
&lt;figure class=&quot;highlight ru</summary>
      
    
    
    
    <category term="积累点滴" scheme="http://yoursite.com/categories/%E7%A7%AF%E7%B4%AF%E7%82%B9%E6%BB%B4/"/>
    
    
    <category term="devise配置json" scheme="http://yoursite.com/tags/devise%E9%85%8D%E7%BD%AEjson/"/>
    
    <category term="devise配置ajax" scheme="http://yoursite.com/tags/devise%E9%85%8D%E7%BD%AEajax/"/>
    
    <category term="devise ajax 登录" scheme="http://yoursite.com/tags/devise-ajax-%E7%99%BB%E5%BD%95/"/>
    
    <category term="devise ajax signin" scheme="http://yoursite.com/tags/devise-ajax-signin/"/>
    
  </entry>
  
  <entry>
    <title>rails使用devise做登录验证</title>
    <link href="http://yoursite.com/2013/42074.html"/>
    <id>http://yoursite.com/2013/42074.html</id>
    <published>2013-12-12T12:28:00.000Z</published>
    <updated>2022-03-11T12:52:46.668Z</updated>
    
    <content type="html"><![CDATA[<p>使用devise这个gem只需要简单几步就能做好用户注册登录等功能，能节省大量时间和精力。</p><p>1.安装devise</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑Gemfile加入以下内容</span></span><br><span class="line">gem <span class="string">&#x27;devise&#x27;</span></span><br><span class="line"><span class="comment">#安装gem</span></span><br><span class="line">bundle install</span><br><span class="line"><span class="comment">#初始化devise</span></span><br><span class="line">rails g devise:install</span><br><span class="line"><span class="comment">#初始化model为user</span></span><br><span class="line">rails g devise user</span><br><span class="line"><span class="comment">#初始化视图</span></span><br><span class="line">rails g devise:views</span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">rake db:migrate</span><br></pre></td></tr></table></figure><p>2.使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空的controller</span></span><br><span class="line">rails g controller home index --no-helper --no-assets</span><br><span class="line"><span class="comment"># 编辑config/routes.rb将home index设为首页</span></span><br><span class="line">root <span class="string">&#x27;home#index&#x27;</span></span><br><span class="line"><span class="comment"># 编辑app/views/home/index.html.erb加入以下内容</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Home#index<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&lt;% if user_signed_in? %&gt;</span><br><span class="line">  hello, &lt;%= current_user.username %&gt;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  &lt;%= link_to(&#x27;登出&#x27;, destroy_user_session_path, :method =&gt; :delete) %&gt;</span><br><span class="line">&lt;% else %&gt;</span><br><span class="line">  &lt;%= link_to(&#x27;注册&#x27;, new_registration_path(:user)) %&gt;</span><br><span class="line">  &lt;%= link_to(&#x27;登录&#x27;, new_session_path(:user)) %&gt;</span><br><span class="line">&lt;% end %&gt;</span><br></pre></td></tr></table></figure><p>此时访问<a href="http://localhost:3000就可以使用注册登录功能了。">http://localhost:3000就可以使用注册登录功能了。</a></p><p>另附两个有用到的链接：<br>1.添加用户名登录 <a href="https://github.com/plataformatec/devise/wiki/How-To:-Allow-users-to-sign-in-using-their-username-or-email-address">How To: Allow users to sign in using their username or email address</a><br>2.添加管理员角色 <a href="https://github.com/plataformatec/devise/wiki/How-To:-Add-an-Admin-role">How To: Add an Admin Role</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用devise这个gem只需要简单几步就能做好用户注册登录等功能，能节省大量时间和精力。&lt;/p&gt;
&lt;p&gt;1.安装devise&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="积累点滴" scheme="http://yoursite.com/categories/%E7%A7%AF%E7%B4%AF%E7%82%B9%E6%BB%B4/"/>
    
    
    <category term="devise" scheme="http://yoursite.com/tags/devise/"/>
    
    <category term="devise添加用户名" scheme="http://yoursite.com/tags/devise%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%90%8D/"/>
    
    <category term="devise添加管理员" scheme="http://yoursite.com/tags/devise%E6%B7%BB%E5%8A%A0%E7%AE%A1%E7%90%86%E5%91%98/"/>
    
    <category term="rails devise" scheme="http://yoursite.com/tags/rails-devise/"/>
    
  </entry>
  
  <entry>
    <title>CentOS配置ruby on rails开发环境</title>
    <link href="http://yoursite.com/2013/41947.html"/>
    <id>http://yoursite.com/2013/41947.html</id>
    <published>2013-12-09T12:25:00.000Z</published>
    <updated>2022-03-11T12:52:46.668Z</updated>
    
    <content type="html"><![CDATA[<p>最近用rails做了一个项目，分享一下开发环境搭建方面的信息。</p><p>一、基本信息</p><p>操作系统：CentOS 6.x<br>数据库：PostgreSQL 9.x<br>Ruby版本：2.x<br>Rails版本：4.x</p><p>二、基本软件</p><p>1.nodejs<br>rails中解析js的部份库会用到js引擎，nodejs较为高效，所以配置nodejs。<br>1). 下载nodejs Linux二进制包，nodejs的安装包可以在这里找到 <a href="http://www.nodejs.org/download/">http://www.nodejs.org/download/</a><br><code>wget http://nodejs.org/dist/v0.10.22/node-v0.10.22-linux-x86.tar.gz</code></p><p>2).解压到&#x2F;usr&#x2F;local目录<br><code>tar -xzf node-v0.10.22-linux-x86.tar.gz -C /usr/local/</code></p><p>3). 建立软链接方便后期版本替换<br><code>ln -s node-v0.10.22-linux-x86 node</code></p><p>4). 添加环境变量<br>vim &#x2F;etc&#x2F;profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在unset -f pathmunge之前加入如下两行，因为要用到pathmunge，所以要加在unset之前。</span></span><br><span class="line"><span class="built_in">export</span> NODE_HOME=/usr/local/node</span><br><span class="line">pathmunge <span class="variable">$NODE_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>2.PostgreSQL<br>1). 添加9.x源，rpm源的列表可以在这里找到 <a href="http://yum.postgresql.org/repopackages.php#pg93">http://yum.postgresql.org/repopackages.php#pg93</a><br><code>rpm -i http://yum.postgresql.org/9.3/redhat/rhel-6-i386/pgdg-centos93-9.3-1.noarch.rpm</code></p><p>2). 安装并初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install postgresql93-server postgresql93-contrib postgresql93-devel</span><br><span class="line">service postgresql-9.3 initdb</span><br><span class="line">chkconfig postgresql-9.3 on</span><br></pre></td></tr></table></figure><p>3). 修改配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/lib/pgsql/9.3/data/</span><br><span class="line">vim pg_hba.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将原有 127.0.0.1 这一行中的indent修改为md5，并加下localhost这一行的配置</span></span><br><span class="line">host    all             all             localhost               md5</span><br><span class="line">host    all             all             127.0.0.1/32            md5</span><br><span class="line"></span><br><span class="line">vim postgresql.conf</span><br><span class="line"><span class="comment"># 搜索listen_addresses，去掉注释修改localhost为*</span></span><br><span class="line">listen_addresses = <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><p>4). 添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PSQL_HOME=/usr/pgsql-9.3</span><br><span class="line">pathmunge <span class="variable">$PSQL_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>三、ROR安装配置</p><p>1.安装rvm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -L get.rvm.io | bash -s stable</span><br><span class="line"><span class="comment"># 输出以上命令，将会自动进行安装。</span></span><br><span class="line">sed -i -e <span class="string">&#x27;s/ftp\.ruby-lang\.org\/pub\/ruby/ruby\.taobao\.org\/mirrors\/ruby/g&#x27;</span> /usr/local/rvm/config/db</span><br><span class="line"><span class="comment"># 修改源为淘宝镜像，我的rvm安装在/usr/local目录中。完成后重启系统。</span></span><br><span class="line"><span class="comment"># 更多rvm使用可参考 http://ruby-china.org/wiki/rvm-guide</span></span><br></pre></td></tr></table></figure><p>2.使用rvm安装ruby</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rvm install ruby-2.0.0</span><br><span class="line"><span class="comment">#修改gem默认源</span></span><br><span class="line">gem <span class="built_in">source</span> -a http://ruby.taobao.org/</span><br><span class="line">gem <span class="built_in">source</span> -r https://rubygems.org/</span><br></pre></td></tr></table></figure><p>3.创建项目以及对应的gemset</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建项目路径</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> demo</span><br><span class="line"><span class="built_in">cd</span> demo</span><br><span class="line"><span class="comment">#创建gemset</span></span><br><span class="line">rvm gemset create demo</span><br><span class="line">rvm gemset use demo</span><br><span class="line"><span class="comment">#安装rails</span></span><br><span class="line">gem install rails</span><br></pre></td></tr></table></figure><p>4.添加postgresql帐号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br><span class="line">createuser -d demo</span><br><span class="line">psql -d postgres</span><br><span class="line"><span class="comment"># 修改demo帐号的密码</span></span><br><span class="line">ALTER USER demo WITH PASSWORD <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line">\q</span><br></pre></td></tr></table></figure><p>5.创建rails项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rails new . -BT -d postgresql</span><br><span class="line"><span class="comment"># -B跳过bundle（后面手动进行）,-T跳过test-unit（建议使用RSpec)，-d 指定数据库为postgresql</span></span><br></pre></td></tr></table></figure><p>6.修改rails配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vim Gemfile</span><br><span class="line"><span class="comment">#将第一行修改为淘宝源</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&#x27;http://ruby.taobao.org&#x27;</span></span><br><span class="line"><span class="comment">#安装gem</span></span><br><span class="line">bundle install</span><br><span class="line"><span class="comment">#安装pg库的时候会报错，PostgreSQL非系统标准路径，需指定pg_config安装</span></span><br><span class="line">gem install pg -- --with-pg-config=/usr/pgsql-9.3/bin/pg_config</span><br><span class="line"><span class="comment">#编辑数据库配置</span></span><br><span class="line">vim config/database.yml</span><br><span class="line"><span class="comment"># 找到development，修改username为demo，password为第4步指定的密码。如果不需要创建test数据库可以找到test的配置全部注释掉。</span></span><br><span class="line"></span><br><span class="line">development:</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  encoding: unicode</span><br><span class="line">  database: demo_development</span><br><span class="line">  pool: 5</span><br><span class="line">  username: demo</span><br><span class="line">  password: 123456</span><br></pre></td></tr></table></figure><p>7.安装gem</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bundle install</span><br><span class="line"><span class="comment">#安装到pg库的时候会报错，PostgreSQL非系统标准路径，需指定pg_config安装</span></span><br><span class="line">gem install pg -- --with-pg-config=/usr/pgsql-9.3/bin/pg_config</span><br></pre></td></tr></table></figure><p>8.创建数据库，启动rails</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rake db:create</span><br><span class="line">rails s</span><br></pre></td></tr></table></figure><p>经过以上几步，输入http:&#x2F;&#x2F;<ip address>:3000应该可以看到rails的默认页面了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近用rails做了一个项目，分享一下开发环境搭建方面的信息。&lt;/p&gt;
&lt;p&gt;一、基本信息&lt;/p&gt;
&lt;p&gt;操作系统：CentOS 6.x&lt;br&gt;数据库：PostgreSQL 9.x&lt;br&gt;Ruby版本：2.x&lt;br&gt;Rails版本：4.x&lt;/p&gt;
&lt;p&gt;二、基本软件&lt;/p&gt;</summary>
      
    
    
    
    <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
    <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
    <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
    <category term="PostgreSQL" scheme="http://yoursite.com/tags/PostgreSQL/"/>
    
    <category term="rails development environment" scheme="http://yoursite.com/tags/rails-development-environment/"/>
    
    <category term="rails环境配置" scheme="http://yoursite.com/tags/rails%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    <category term="centos配置rails" scheme="http://yoursite.com/tags/centos%E9%85%8D%E7%BD%AErails/"/>
    
  </entry>
  
</feed>
